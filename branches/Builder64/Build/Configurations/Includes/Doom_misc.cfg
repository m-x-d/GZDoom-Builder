
// Basic Doom and Vanilla engine stuff.

// TEXTURE INDEXES
textureindex
{
	0 = "-";
	1 = "BLANK";
	2 = "C1";
	3 = "C10";
	4 = "C100";
	5 = "C101";
	6 = "C102";
	7 = "C102B";
	8 = "C104";
	9 = "C108";
	10 = "C109";
	11 = "C12";
	12 = "C13";
	13 = "C14";
	14 = "C16";
	15 = "C17";
	16 = "C18";
	17 = "C19";
	18 = "C2";
	19 = "C20";
	20 = "C200";
	21 = "C201";
	22 = "C204";
	23 = "C206";
	24 = "C21";
	25 = "C22";
	26 = "C23";
	27 = "C24";
	28 = "C25";
	29 = "C28";
	30 = "C29";
	31 = "C3";
	32 = "C301";
	33 = "C302";
	34 = "C303";
	35 = "C306";
	36 = "C307";
	37 = "C307B";
	38 = "C308";
	39 = "C31";
	40 = "C33";
	41 = "C34";
	42 = "C35";
	43 = "C35B";
	44 = "C37";
	45 = "C38";
	46 = "C4";
	47 = "C401";
	48 = "C402";
	49 = "C403";
	50 = "C405";
	51 = "C408";
	52 = "C41";
	53 = "C42";
	54 = "C43";
	55 = "C44";
	56 = "C44B";
	57 = "C45";
	58 = "C46";
	59 = "C47";
	60 = "C48";
	61 = "C49";
	62 = "C5";
	63 = "C50";
	64 = "C500";
	65 = "C51";
	66 = "C52";
	67 = "C53";
	68 = "C54";
	69 = "C55";
	70 = "C56";
	71 = "C57";
	72 = "C58";
	73 = "C59";
	74 = "C6";
	75 = "C60";
	76 = "C61";
	77 = "C62";
	78 = "C63";
	79 = "C64";
	80 = "C65";
	81 = "C66";
	82 = "C67";
	83 = "C72";
	84 = "C74";
	85 = "C75";
	86 = "C76";
	87 = "C77";
	88 = "C78";
	89 = "C79";
	90 = "C8";
	91 = "C80";
	92 = "C81";
	93 = "C83";
	94 = "C86";
	95 = "C87";
	96 = "C88";
	97 = "C89";
	98 = "C9";
	99 = "C90";
	100 = "C91";
	101 = "C92";
	102 = "C97";
	103 = "C98";
	104 = "C99";
	105 = "CBTRAKA";
	106 = "CDOR2BB";
	107 = "CDOR2TA";
	108 = "CDOR3TA";
	109 = "CDOR4BB";
	110 = "CDOR4TA";
	111 = "CFACEA";
	112 = "CFACEB";
	113 = "CFACEC";
	114 = "CRTRAKA";
	115 = "CTRAK0";
	116 = "CTRAK1";
	117 = "CYTRAKA";
	118 = "H56";
	119 = "WFALL";
	120 = "H10";
	121 = "H100";
	122 = "H11";
	123 = "H110";
	124 = "H112";
	125 = "H113";
	126 = "H116";
	127 = "H117";
	128 = "H118";
	129 = "H119";
	130 = "H12";
	131 = "H122";
	132 = "H123";
	133 = "H124";
	134 = "H127";
	135 = "H128";
	136 = "H129";
	137 = "H13";
	138 = "H130";
	139 = "H131";
	140 = "H14";
	141 = "H15";
	142 = "H16";
	143 = "H18";
	144 = "H20";
	145 = "H21";
	146 = "H23";
	147 = "H24";
	148 = "H25";
	149 = "H26";
	150 = "H27";
	151 = "H28";
	152 = "H29";
	153 = "H30";
	154 = "H31";
	155 = "H32";
	156 = "H33";
	157 = "H36";
	158 = "H37";
	159 = "H41";
	160 = "H44";
	161 = "H48";
	162 = "H49";
	163 = "H50";
	164 = "H51";
	165 = "H52";
	166 = "H53";
	167 = "H54";
	168 = "H55";
	169 = "H57";
	170 = "H58";
	171 = "H59";
	172 = "H60";
	173 = "H63";
	174 = "H64";
	175 = "H65";
	176 = "H66";
	177 = "H67";
	178 = "H68";
	179 = "H69";
	180 = "H77";
	181 = "H79";
	182 = "H82";
	183 = "H88";
	184 = "H89";
	185 = "H90";
	186 = "H91";
	187 = "H92";
	188 = "H93";
	189 = "H94";
	190 = "H95";
	191 = "H96";
	192 = "H97";
	193 = "H98";
	194 = "H99";
	195 = "HDOR10A";
	196 = "HDOR1BB";
	197 = "HDOR1TA";
	198 = "HDOR2BB";
	199 = "HDOR2TA";
	200 = "HDOR3A";
	201 = "HDOR4A";
	202 = "HDOR6A";
	203 = "HDOR9A";
	204 = "HELLAA";
	205 = "HELLAAA";
	206 = "HELLAB";
	207 = "HELLAC";
	208 = "HELLAD";
	209 = "HELLAE";
	210 = "HELLAF";
	211 = "HELLAH";
	212 = "HELLAI";
	213 = "HELLAJ";
	214 = "HELLAK";
	215 = "HELLAL";
	216 = "HELLAM";
	217 = "HELLAN";
	218 = "HELLAO";
	219 = "HELLAP";
	220 = "HELLAQ";
	221 = "HELLAR";
	222 = "HELLAS";
	223 = "HTELA";
	224 = "HTELB";
	225 = "HTELC";
	226 = "HTELD";
	227 = "HTRAC1";
	228 = "HTRAC2";
	229 = "HTRAC3";
	230 = "HTRAC4";
	231 = "HTRAC6";
	232 = "SDOORA";
	233 = "SDOORB";
	234 = "SDOORC";
	235 = "SDOORD";
	236 = "SDOORE";
	237 = "SDOORFA";
	238 = "SDOORFB";
	239 = "SDOORGA";
	240 = "SDOORGB";
	241 = "SMONAA";
	242 = "SMONAB";
	243 = "SMONAC";
	244 = "SMONAD";
	245 = "SMONBA";
	246 = "SMONBB";
	247 = "SMONBC";
	248 = "SMONBD";
	249 = "SMONCA";
	250 = "SMONCB";
	251 = "SMONCC";
	252 = "SMONCD";
	253 = "SMONDA";
	254 = "SMONDB";
	255 = "SMONDC";
	256 = "SMONDD";
	257 = "SMONEA";
	258 = "SMONEB";
	259 = "SMONEC";
	260 = "SMONED";
	261 = "SMONF";
	262 = "SPACAMM";
	263 = "SPACEAA";
	264 = "SPACEAB";
	265 = "SPACEAC";
	266 = "SPACEAE";
	267 = "SPACEAF";
	268 = "SPACEAG";
	269 = "SPACEAH";
	270 = "SPACEAI";
	271 = "SPACEAJ";
	272 = "SPACEAK";
	273 = "SPACEAL";
	274 = "SPACEAM";
	275 = "SPACEAN";
	276 = "SPACEAO";
	277 = "SPACEAP";
	278 = "SPACEAQ";
	279 = "SPACEAR";
	280 = "SPACEAS";
	281 = "SPACEAT";
	282 = "SPACEAU";
	283 = "SPACEAV";
	284 = "SPACEAW";
	285 = "SPACEAX";
	286 = "SPACEAY";
	287 = "SPACEAZ";
	288 = "SPACEB";
	289 = "SPACEBA";
	290 = "SPACEBB";
	291 = "SPACEBC";
	292 = "SPACEBD";
	293 = "SPACEBE";
	294 = "SPACEBF";
	295 = "SPACEBG";
	296 = "SPACEBH";
	297 = "SPACEBI";
	298 = "SPACEBJ";
	299 = "SPACEBK";
	300 = "SPACEBL";
	301 = "SPACEBM";
	302 = "SPACEBN";
	303 = "SPACEBO";
	304 = "SPACEBQ";
	305 = "SPACEBR";
	306 = "SPACEBS";
	307 = "SPACEBT";
	308 = "SPACEC";
	309 = "SPACECA";
	310 = "SPACECB";
	311 = "SPACECC";
	312 = "SPACECD";
	313 = "SPACECE";
	314 = "SPACECF";
	315 = "SPACECG";
	316 = "SPACECH";
	317 = "SPACECI";
	318 = "SPACECJ";
	319 = "SPACECL";
	320 = "SPACECM";
	321 = "SPACECN";
	322 = "SPACECO";
	323 = "SPACECP";
	324 = "SPACECQ";
	325 = "STRACA";
	326 = "STRACB";
	327 = "STRAKB";
	328 = "STRAKR";
	329 = "STRAKY";
	330 = "SEXIT";
	331 = "SEXITA";
	332 = "SWXCA";
	333 = "SWXCB";
	334 = "SWXCKA";
	335 = "SWXCKB";
	336 = "SWXCKLA";
	337 = "SWXCKLB";
	338 = "SWXCLA";
	339 = "SWXCLB";
	340 = "SWXHCA";
	341 = "SWXHCB";
	342 = "SWXSAA";
	343 = "SWXSAB";
	344 = "SWXSCA";
	345 = "SWXSCB";
	346 = "SWXSDA";
	347 = "SWXSDB";
	348 = "SWXSEA";
	349 = "SWXSEB";
	350 = "SWXSFA";
	351 = "SWXSFB";
	352 = "SWXSGA";
	353 = "SWXSGB";
	354 = "-";
	355 = "BLOODA";
	356 = "BLOODB";
	357 = "SLIMEA";
	358 = "SLIMEB";
	359 = "SLUDGEA";
	360 = "SLUDGEB";
	361 = "WATERA";
	362 = "WATERB";
	363 = "CASF07";
	364 = "CASF102";
	365 = "CASF103";
	366 = "CASF104";
	367 = "CASF105";
	368 = "CASF106";
	369 = "CASF107";
	370 = "CASF108";
	371 = "CASF109";
	372 = "CASF11";
	373 = "CASF12";
	374 = "CASF200";
	375 = "CASF201";
	376 = "CASF203";
	377 = "CASF204";
	378 = "CASF20B";
	379 = "CASF30";
	380 = "CASF50";
	381 = "CASF70";
	382 = "CASF80";
	383 = "CASF87";
	384 = "CASF89";
	385 = "CASFL1";
	386 = "CASFL10";
	387 = "CASFL2";
	388 = "CASFL20";
	389 = "CASFL21";
	390 = "CASFL22";
	391 = "CASFL23";
	392 = "CASFL24";
	393 = "CASFL25";
	394 = "CASFL26";
	395 = "CASFL27";
	396 = "CASFL28";
	397 = "CASFL3";
	398 = "CASFL4";
	399 = "CASFL5";
	400 = "CASFL53";
	401 = "CASFL54";
	402 = "CASFL55";
	403 = "CASFL56";
	404 = "CASFL57";
	405 = "CASFL58";
	406 = "CASFL6";
	407 = "CASFL7";
	408 = "CASFL70";
	409 = "CASFL8";
	410 = "CASFL9";
	411 = "CASFL94";
	412 = "CASFL96";
	413 = "CASFL97";
	414 = "CASFL98";
	415 = "CASFL99";
	416 = "CASL13";
	417 = "CASL19";
	418 = "CTEL";
	419 = "HFL10";
	420 = "HFL12";
	421 = "HFL13";
	422 = "HFL14";
	423 = "HFL15";
	424 = "HFL16";
	425 = "HFL17";
	426 = "HFL20";
	427 = "HFLATA";
	428 = "HFLATB";
	429 = "HFLATC";
	430 = "HFLATD";
	431 = "HFLATE";
	432 = "HFLATF";
	433 = "HFLATG";
	434 = "HFLATH";
	435 = "HFLATI";
	436 = "HFLATJ";
	437 = "HFLATK";
	438 = "HFLATL";
	439 = "HFLATM";
	440 = "HFLATN";
	441 = "HFLATO";
	442 = "SDFLTA";
	443 = "SDFLTAB";
	444 = "SDFLTAC";
	445 = "SDFLTAD";
	446 = "SDFLTAE";
	447 = "SDFLTB";
	448 = "SDFLTBB";
	449 = "SDFLTC";
	450 = "SDFLTCB";
	451 = "SDFLTCC";
	452 = "SFLATA";
	453 = "SFLATAB";
	454 = "SFLATAC";
	455 = "SFLATAD";
	456 = "SFLATAE";
	457 = "SFLATAF";
	458 = "SFLATAI";
	459 = "SFLATAJ";
	460 = "SFLATAK";
	461 = "SFLATAL";
	462 = "SFLATAM";
	463 = "SFLATAN";
	464 = "SFLATAO";
	465 = "SFLATAP";
	466 = "SFLATAQ";
	467 = "SFLATAR";
	468 = "SFLATAS";
	469 = "SFLATB";
	470 = "SFLATBB";
	471 = "SFLATBC";
	472 = "SFLATBE";
	473 = "SFLATBF";
	474 = "SFLATC";
	475 = "SFLATCB";
	476 = "SFLATCC";
	477 = "SFLATCD";
	478 = "SFLATCE";
	479 = "SFLATCF";
	480 = "SFLATCG";
	481 = "SFLATCH";
	482 = "SFLATD";
	483 = "SFLATDC";
	484 = "SFLATDD";
	485 = "SFLATDE";
	486 = "SFLATDF";
	487 = "SFLATDG";
	488 = "SPORTA";
	489 = "SPORTB";
	490 = "TITLEA";
	491 = "TITLEB";
	492 = "F_SKYA";
	493 = "F_SKYB";
	494 = "F_SKYC";
	495 = "F_SKYD";
	496 = "F_SKYE";
	497 = "F_SKYF";
	498 = "F_SKYG";
	499 = "F_SKYH";
	500 = "F_SKYI";
	501 = "F_SKYJ";
	502 = "F_SKYK";
}

// thing palettes
thingpalettes
{
	1 = "PALPLAY1";
	2 = "PALPLAY2";
	3 = "PALPLAY3";
	4 = "PALSARG1";
	5 = "PALPOSS1";
	6 = "PALBOSS1";
	7 = "PALTROO1";
}

skills
{
	1 = "Be Gentle";
	2 = "Bring It On";
	3 = "I Own Doom";
	4 = "Watch Me Die";
	5 = "Hardcore";
}


linedefflags
{
	1 = "Impassable";
	2 = "Block Monster";
	4 = "Double Sided";
	8 = "Upper Unpegged";
	16 = "Lower Unpegged";
	32 = "Secret";
	64 = "Block Sound";
	128 = "Hidden";
	256 = "Shown";
	512 = "Render Mid-Texture";
	1024 = "No Occlusion";
	2048 = "Block Projectiles";
	4096 = "Trigger By Dead Thing";
	//8192 = "Switch Mask 1";
	//16384 = "Switch Mask 2";
	//32768 = "Switch Mask 3";
	65536 = "Switch Check Height";
	131072 = "Scroll Right";
	262144 = "Scroll Left";
	524288 = "Scroll Up";
	1048576 = "Scroll Down";
	2097152 = "Peg Upper Wall Color";
	4194304 = "Peg Lower Wall Color";
	8388608 = "Use Multi Colors";
	16777216 = "Front Side Only";
	//33554432 = "Unknown0x2000000";
	67108864 = "Flip Upper Pegged Color";
	//134217728 = "Unknown0x8000000";
	//268435456 = "Unknown0x10000000";
	//536870912 = "Unknown0x20000000";
	1073741824 = "UV Wrap H Mirror";
	2147483648 = "UV Wrap V Mirror";
}

sectorflags
{
	1 = "Echo Sounds";
	2 = "Heavy Echo Sounds";
	4 = "Liquid Effect";
	8 = "Sync Specials";
	16 = "Toggle Fast Scrolling";
	32 = "Secret";
	64 = "Damage x5";
	128 = "Damage x10";
	256 = "Damage x20";
	512 = "Hide in Automap";
	1024 = "Set Ceiling Scroll";
	2048 = "Set Floor Scroll";
	4096 = "Scroll Left";
	8192 = "Scroll Right";
	16384 = "Scroll Up";
	32768 = "Scroll Down";
}


thingflags
{
	1 = "Easy";
	2 = "Medium";
	4 = "Hard";
	8 = "Deaf";
	16 = "Multiplayer";
	32 = "Spawner";
	64 = "Trigger On Touch";
	128 = "Trigger On Death";
	256 = "Count Secret On Pickup";
	512 = "No Infighting";
	1024 = "No Deathmatch";
	2048 = "No Net Game";
}


// Default flags for first new thing
defaultthingflags
{
	1;
	2;
	4;
}


// Mask for the thing flags which indicates the options
// that make the same thing appear in the same modes
thingflagsmasks
{
	thingflagsmask1 = 7;	// 1 + 2 + 4
	thingflagsmask2 = 0;
}


// Linedef flags UDMF translation table
// This is needed for copy/paste and prefabs to work properly
// When the UDMF field name is prefixed with ! it is inverted
linedefflagstranslation
{
	1 = "blocking";
	2 = "blockmonsters";
	4 = "twosided";
	8 = "dontpegtop";
	16 = "dontpegbottom";
	32 = "secret";
	64 = "blocksound";
	128 = "dontdraw";
	256 = "mapped";
}


// Thing flags UDMF translation table
// This is needed for copy/paste and prefabs to work properly
// When the UDMF field name is prefixed with ! it is inverted
thingflagstranslation
{
	1 = "skill1";
	2 = "skill2";
	4 = "skill3";
	8 = "ambush";
	16 = "!single";
}


// Default sector brightness levels
sectorbrightness
{
	255; 240; 224; 208; 192; 176; 160; 144;
	128; 112; 96; 80; 64; 48; 32; 16; 0;
}


/*
TEXTURES AND FLAT SOURCES
This tells Doom Builder where to find the information for textures
and flats in the IWAD file, Addition WAD file and Map WAD file.

Start and end lumps must be given in a structure (of which the
key name doesnt matter) and any textures or flats in between them
are loaded in either the textures category or flats category.

For textures: PNAMES, TEXTURE1 and TEXTURE2 are loaded by default.
*/

// Texture sources
textures
{
	standard1
	{
		start = "T_START";
		end = "T_END";
	}

	standard2
	{
		start = "TT_START";
		end = "TT_END";
	}
}

// Patch sources
patches
{
}

// Sprite sources
sprites
{
	standard1
	{
		start = "S_START";
		end = "S_END";
	}
	
	standard2
	{
		start = "SS_START";
		end = "SS_END";
	}
}

// Flat sources
flats
{
	
}


/*
MAP LUMP NAMES
Map lumps are loaded with the map as long as they are right after each other. When the editor
meets a lump which is not defined in this list it will ignore the map if not satisfied.
The order of items defines the order in which lumps will be written to WAD file on save.
To indicate the map header lump, use ~MAP

Legenda:
required = Lump is required to exist.
blindcopy = Lump will be copied along with the map blindly. (usefull for lumps Doom Builder doesn't use)
nodebuild = The nodebuilder generates this lump.
allowempty = The nodebuilder is allowed to leave this lump empty.
script = This lump is a text-based script. Specify the filename of the script configuration to use.
*/

doommaplumpnames
{
	~MAP
	{
		required = true;
		blindcopy = true;
		nodebuild = false;
	}
	
	THINGS
	{
		required = true;
		nodebuild = true;
		allowempty = true;
	}
	
	LINEDEFS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	SIDEDEFS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	VERTEXES
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	SEGS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	SSECTORS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	NODES
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	SECTORS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	REJECT
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	BLOCKMAP
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}

	LEAFS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}

	LIGHTS
	{
		required = true;
		nodebuild = true;
		allowempty = true;
	}

	MACROS
	{
		required = true;
		nodebuild = true;
		allowempty = true;
	}
}


hexenmaplumpnames
{
	~MAP
	{
		required = true;
		blindcopy = true;
		nodebuild = false;
	}
	
	THINGS
	{
		required = true;
		nodebuild = true;
		allowempty = true;
	}
	
	LINEDEFS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	SIDEDEFS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	VERTEXES
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	SEGS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	SSECTORS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	NODES
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	SECTORS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	REJECT
	{
		required = false;
		nodebuild = true;
		allowempty = true;
	}
	
	BLOCKMAP
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	BEHAVIOR
	{
		required = true;
		nodebuild = false;
		blindcopy = true;
	}
	
	SCRIPTS
	{
		required = false;
		nodebuild = false;
		script = "ZDoom_ACS.cfg";
	}
}


// Default thing filters
// (these are not required, just usefull for new users)
thingsfilters
{
	
	filter0
	{
		name = "Easy skill";
		category = "";
		type = -1;
		
		fields
		{
			1 = true;
		}
		
	}
	
	
	filter1
	{
		name = "Hard skill";
		category = "";
		type = -1;
		
		fields
		{
			4 = true;
		}
		
	}
	
	
	filter2
	{
		name = "Keys only";
		category = "keys";
		type = -1;
	}
	
	
	filter3
	{
		name = "Medium skill";
		category = "";
		type = -1;
		
		fields
		{
			2 = true;
		}
		
	}
	
	
	filter4
	{
		name = "Multiplayer";
		category = "";
		type = -1;
		
		fields
		{
			16 = true;
		}
		
	}
	
}


// ENUMERATIONS
// These are enumerated lists for linedef types and UDMF fields.
// Reserved names are: angledeg, anglerad, color, texture, flat
enums
{
	yesno
	{
		0 = "Yes";
		1 = "No";
	}
	
	noyes
	{
		0 = "No";
		1 = "Yes";
	}
	
	onoff
	{
		0 = "On";
		1 = "Off";
	}
	
	offon
	{
		0 = "Off";
		1 = "On";
	}
	
	updown
	{
		0 = "Up";
		1 = "Down";
	}
	
	downup
	{
		0 = "Down";
		1 = "Up";
	}
	
	addset
	{
		0 = "Add";
		1 = "Set";
	}
}

