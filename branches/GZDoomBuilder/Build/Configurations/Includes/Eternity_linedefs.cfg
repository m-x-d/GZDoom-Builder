doom
{
	pillar
	{
		title = "Pillars";
		362
		{
			title = "Pillar Build";
			prefix = "--";
		}
		363
		{
			title = "Pillar Build and Crush";
			prefix = "--";
		}
		364
		{
			title = "Pillar Open";
			prefix = "--";
		}
	}
	polyobject
	{
		title = "Polyobjects";
		348
		{
			title = "Polyobject Start Line";
			prefix = "--";
		}
		349
		{
			title = "Polyobject Explicit Line";
			prefix = "--";
		}
		350
		{
			title = "Polyobject door slide";
			prefix = "--";
		}
		351
		{
			title = "Polyobject door swing";
			prefix = "--";
		}
		352
		{
			title = "Polyobject move";
			prefix = "--";
		}
		353
		{
			title = "Polyobject override move";
			prefix = "--";
		}
		354
		{
			title = "Polyobject rotate right";
			prefix = "--";
		}
		355
		{
			title = "Polyobject override rotate right";
			prefix = "--";
		}
		356
		{
			title = "Polyobject rotate left";
			prefix = "--";
		}
		357
		{
			title = "Polyobject override rotate left";
			prefix = "--";
		}
	}
	thing
	{
		title = "Things";
		398
		{
			title = "Thing spawn";
			prefix = "--";
		}
		399
		{
			title = "Thing spawn no fog";
			prefix = "--";
		}
		402
		{
			title = "Thing projectile";
			prefix = "--";
		}
		403
		{
			title = "Thing projectile gravity";
			prefix = "--";
		}
		404
		{
			title = "Thing activate";
			prefix = "--";
		}
		405
		{
			title = "Thing deactivate";
			prefix = "--";
		}
		421
		{
			title = "Thing change TID";
			prefix = "--";
		}
	}
	transfer
	{
		title = "Transfer";
		281
		{
			prefix = "--";
			title = "Transfer floor to 3dmidtex";
		}
		282
		{
			prefix = "--";
			title = "Transfer ceiling to 3dmidtex";
		}
	}
	hereticwind
	{
		title = "Heretic wind";
		293
		{
			prefix = "--";
			title = "Heretic wind by line vector";
		}
		294
		{
			prefix = "--";
			title = "Heretic current by line vector";
		}
	}
	portal
	{
		title = "Portal";
		283
		{
			prefix = "--";
			title = "Portal plane ceilings";
		}
		284
		{
			prefix = "--";
			title = "Portal plane floors";
		}
		285
		{
			prefix = "--";
			title = "Portal plane floors/ceilings";
		}
		286
		{
			prefix = "--";
			title = "Portal horizon ceilings";
		}
		287
		{
			prefix = "--";
			title = "Portal horizon floors";
		}
		288
		{
			prefix = "--";
			title = "Portal horizon floors/ceilings";
		}
		290
		{
			prefix = "--";
			title = "Portal skybox ceilings";
		}
		291
		{
			prefix = "--";
			title = "Portal skybox floors";
		}
		292
		{
			prefix = "--";
			title = "Portal skybox floors/ceilings";
		}
		295
		{
			prefix = "--";
			title = "Portal anchored ceilings";
		}
		296
		{
			prefix = "--";
			title = "Portal anchored floors";
		}
		297
		{
			prefix = "--";
			title = "Portal anchored floors/ceilings";
		}
		298
		{
			prefix = "--";
			title = "Portal anchor for 295 and 297";
		}
		299
		{
			prefix = "--";
			title = "Portal anchor for 296";
		}
		344
		{
			prefix = "--";
			title = "Portal two-way anchored ceilings";
		}
		345
		{
			prefix = "--";
			title = "Portal two-way anchored floors";
		}
		346
		{
			prefix = "--";
			title = "Portal anchor for 344";
		}
		347
		{
			prefix = "--";
			title = "Portal anchor for 345";
		}
		289
		{
			prefix = "--";
			title = "Portal transfer";
		}
		358
		{
			prefix = "--";
			title = "Portal linked ceilings";
		}
		359
		{
			prefix = "--";
			title = "Portal linked floors";
		}
		360
		{
			prefix = "--";
			title = "Portal linked anchor for 358";
		}
		361
		{
			prefix = "--";
			title = "Portal linked anchor for 359";
		}
		376
		{
			prefix = "--";
			title = "Portal linked apply to lines";
		}
		377
		{
			prefix = "--";
			title = "Portal linked anchor for 376";
		}
		385
		{
			prefix = "--";
			title = "Portal linked apply front sector";
		}
	}

	slopes
	{
		title = "Slopes";
		386
		{
			prefix = "--";
			title = "Slope front sector to floor";
		}
		387
		{
			prefix = "--";
			title = "Slope front sector to ceiling";
		}
		388
		{
			prefix = "--";
			title = "Slope front sector to floor/ceiling";
		}
		389
		{
			prefix = "--";
			title = "Slope back sector to floor";
		}
		390
		{
			prefix = "--";
			title = "Slope back sector to ceiling";
		}
		391
		{
			prefix = "--";
			title = "Slope back sector to floor/ceiling";
		}
		392
		{
			prefix = "--";
			title = "Slope back floor and front ceiling";
		}
		393
		{
			prefix = "--";
			title = "Slope back ceiling and front floor";
		}
		394
		{
			prefix = "--";
			title = "Slope front floor to tagged slope";
		}
		395
		{
			prefix = "--";
			title = "Slope front ceiling to tagged slope";
		}
		396
		{
			prefix = "--";
			title = "Slope front floor/ceiling to tagged slope";
		}
	}
	surfaces
	{
		title = "Attached surfaces";
		379
		{
			prefix = "--";
			title = "Attach set ceiling control";
		}
		380
		{
			prefix = "--";
			title = "Attach set floor control";
		}
		381
		{
			prefix = "--";
			title = "Attach floor to control";
		}
		382
		{
			prefix = "--";
			title = "Attach ceiling to control";
		}
		383
		{
			prefix = "--";
			title = "Attach mirror floor to control";
		}
		384
		{
			prefix = "--";
			title = "Attach mirror ceiling to control";
		}
	}

	exit
	{
		title = "Exit";
		400
		{
			prefix = "--";
			title = "Teleport end game";
		}
	}

	scripts
	{
		title = "Scripts";
		280
		{
			prefix = "WR";
			title = "Script start";
		}
		273
		{
			prefix = "WR";
			title = "Script start 1-way";
		}
		274
		{
			prefix = "W1";
			title = "Script start";
		}
		275
		{
			prefix = "W1";
			title = "Script start 1-way";
		}
		276
		{
			prefix = "SR";
			title = "Script start";
		}
		277
		{
			prefix = "S1";
			title = "Script start";
		}
		278
		{
			prefix = "GR";
			title = "Script start";
		}
		279
		{
			prefix = "G1";
			title = "Script start";
		}
		365
		{
			prefix = "--";
			title = "Script execute param";
		}
		366
		{
			prefix = "--";
			title = "Script suspend param";
		}
		367
		{
			prefix = "--";
			title = "Script terminate param";
		}
	}
	extradata
	{
		title = "ExtraData";
		270
		{
			prefix = "--";
			title = "ExtraData linedef";
		}
	}
}

udmf
{
	polyobj
	{	
		title = "Polyobjects";
		
		87
		{
			title = "Polyobject Stop";
			id = "Polyobj_Stop";
			arg0
			{
				title = "Polyobject Number";
				type = 25;
			}
		}
	}

	line
	{
		title = "Line";
		
		9
		{
			title = "Line Horizon";
			id = "Line_Horizon";
			requiresactivation = false;
		}	
		
	}

	door
	{
		
		249
		{
			title = "Door Close Wait Open";
			id = "Door_CloseWaitOpen";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "flat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Delay";
				type = 11;
				enum = "generic_door_delays";
				default = 34;
			}
			arg3
			{
				title = "Light Tag";
				type = 13;
			}
		}
	}

	floor
	{
		37
		{
			title = "Floor Move to Value";
			id = "Floor_MoveToValue";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Target Height";
			}
			arg3
			{
				title = "Change";
				type = 11;
				enum = "change";
			}
			arg4
			{
				title = "Crush Damage";
			}
		}
		
		138
		{
			title = "Floor Waggle";
			id = "Floor_Waggle";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Amplitude";
			}
			arg2
			{
				title = "Frequency";
			}
			arg3
			{
				title = "Phase Offset (0-63)";
			}
			arg4
			{
				title = "Duration";
				type = 11;
				enum = "delay_seconds";
				default = 5;
			}
		}
		
		200
		{
			title = "Floor Generic Change";
			id = "Generic_Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Movement Amount";
			}
			arg3
			{
				title = "Target";
				type = 11;
				enum
				{
					0 = "Move by Movement Amount";
					1 = "Highest neighboring floor";
					2 = "Lowest neighboring floor";
					3 = "Nearest neighboring floor";
					4 = "Lowest neighboring ceiling";
					5 = "Sector ceiling";
					6 = "Move by the height of sector's shortest lower texture";
				}
			}
			arg4
			{
				title = "Flags";
				type = 26;
				enum
				{
					0 = "Don't copy anything";
					1 = "Copy floor texture, remove sector special";
					2 = "Copy floor texture";
					3 = "Copy floor texture and special";
				}
				flags
				{
					4 = "Use numeric model if set, trigger model if not";
					8 = "Raise floor if set, lower it if not";
					16 = "Inflict crushing damage";
				}
			}
		}
		
		235
		{
			title = "Transfer Floor Texture and Special form Back Side";
			id = "Floor_TransferTrigger";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		236
		{
			title = "Transfer Floor Texture and Special using Numeric Change Model";
			id = "Floor_TransferNumeric";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		238
		{
			title = "Floor Raise to Lowest Ceiling";
			id = "Floor_RaiseToLowestCeiling";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Change";
				type = 11;
				enum = "change";
			}
			arg3 
			{
				title = "Crushing Damage";
			}
			arg4
			{
				title = "Gap to ceiling";
			}
		}
				
		240
		{
			title = "Floor Raise by Texture";
			id = "Floor_RaiseByTexture";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Change";
				type = 11;
				enum = "change";
			}
		}
		
		242
		{
			title = "Floor Lower to Highest Floor (ZDoom)";
			id = "Floor_LowerToHighest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Adjust Target Height";
			}
			arg3
			{
				title = "Force Adjust";
				type = 11;
				enum = "noyes";
			}
		}
		
		256
		{
			title = "Floor Lower to Highest Floor";
			id = "Floor_LowerToHighestEE";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Change";
				type = 11;
				enum = "change";
			}
		}
		
		250
		{
			title = "Floor Donut";
			id = "Floor_Donut";
			
			arg0
			{
				title = "Center Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Pillar Lower Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Stairs Raise Speed";
				type = 11;
				enum = "stair_speeds";
				default = 4;
			}
		}
		
		251
		{
			title = "Floor and Ceiling Lower and Raise";
			id = "FloorAndCeiling_LowerRaise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Floor Lowering Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Ceiling Raising Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg3
			{
				title = "Emulate Boom Bug";
				type = 11;
				enum
				{
					0 = "No";
					1998 = "Yes";
				}
			}
		}
	}

	stairs
	{
		
		
		217
		{
			title = "Stairs Build up (Doom mode)";
			id = "Stairs_BuildUpDoom";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "stair_speeds";
				default = 4;
			}
			arg2
			{
				title = "Step Height";
			}
			arg3
			{
				title = "Build Step Delay";
				type = 11;
				enum = "delay_tics";
				default = 35;
			}
			arg4
			{
				title = "Reset Delay";
				type = 11;
				enum = "reset_tics";
			}
		}
	}


	pillar
	{
		94	// Pillar_BuildAndCrush
		{
			arg3
			{
				title = "Crush Damage";
				default = 100;
			}
			arg4
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
		}
	}

	ceiling
	{
		title = "Ceiling";
		
		42	// Ceiling Crusher Start
		{
			arg3
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
		}
		43	// Ceiling Crush Once
		{
			arg3
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
			
		}
		
		97
		{
			title = "Ceiling Lower And Crush Dist";
			id = "Ceiling_LowerAndCrushDist";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
				
			}
		
			arg2
			{
				title = "Crush Damage";
				default = 100;
			}
		
			arg3
			{
				title = "Lip";
			}
		
			arg4
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
		}
		
		104
		{
			title = "Ceiling Crush And Raise Dist";
			id = "Ceiling_CrushAndRaiseSilentDist";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		
			arg1
			{
				title = "Lip";
			}
		
			arg2
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
		
			arg3
			{
				title = "Crush Damage";
				default = 100;
			}
		
			arg4
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
		}

		45	// Ceiling Crush Once and Open
		{
			arg3
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
			
		}
		47
		{
			title = "Ceiling Move to Value";
			id = "Ceiling_MoveToValue";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Target Height";
			}
			arg3
			{
				title = "Change";
				type = 11;
				enum = "change";
			}
		}
		
		192
		{
			title = "Ceiling Lower to Highest Floor";
			id = "Ceiling_LowerToHighestFloor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Change";
				type = 11;
				enum = "change";
			}
			arg3
			{
				title = "Crushing Damage";
			}
			arg4
			{
				title = "Gap to Floor";
			}
		}
		193
		{
			title = "Ceiling Lower Instantly by Value * 8";
			id = "Ceiling_LowerInstant";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg2
			{
				title = "Lower by (* 8)";
			}
		}
		194
		{
			title = "Ceiling Raise Instantly by Value * 8";
			id = "Ceiling_RaiseInstant";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg2
			{
				title = "Raise by (* 8)";
			}
		}
		195
		{
			title = "Ceiling Crush Once and Open A";
			id = "Ceiling_CrushRaiseAndStayA";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Lower Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Raise Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg3
			{
				title = "Crush Damage";
				default = 100;
			}
			arg4
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
			
		}
		196
		{
			title = "Ceiling Crush Start A";
			id = "Ceiling_CrushAndRaiseA";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Lower Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Raise Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg3
			{
				title = "Crush Damage";
				default = 100;
			}
			arg4
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
			
		}
		197
		{
			title = "Ceiling Crush Start A (silent)";
			id = "Ceiling_CrushAndRaiseSilentA";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Lower Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Raise Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg3
			{
				title = "Crush Damage";
				default = 100;
			}
			arg4
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
			
		}
		198
		{
			title = "Ceiling Raise by Value * 8";
			id = "Ceiling_RaiseByValueTimes8";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Raise by (* 8)";
			}
		}
		199
		{
			title = "Ceiling Lower by Value * 8";
			id = "Ceiling_LowerByValueTimes8";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Lower by (* 8)";
			}
		}
		
		201
		{
			title = "Ceiling Generic Change";
			id = "Generic_Ceiling";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Movement Amount";
			}
			arg3
			{
				title = "Target";
				type = 11;
				enum
				{
					0 = "Move by Movement Amount";
					1 = "Highest neighboring ceiling";
					2 = "Lowest neighboring ceiling";
					3 = "Nearest neighboring ceiling";
					4 = "Highest neighboring floor";
					5 = "Sector floor";
					6 = "Move by the height of sector's shortest upper texture";
				}
			}
			arg4
			{
				title = "Flags";
				type = 26;
				enum
				{
					0 = "Don't copy anything";
					1 = "Copy ceiling texture, remove sector special";
					2 = "Copy ceiling texture";
					3 = "Copy ceiling texture and special";
				}
				flags
				{
					4 = "Use numeric model if set, trigger model if not";
					8 = "Raise ceiling if set, lower it if not";
					16 = "Inflict crushing damage";
				}
			}
		}
		205
		{
			title = "Ceiling Generic Crush (Doom mode)";
			id = "Generic_Crusher";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Lowering Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Raising Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg3
			{
				title = "Silent";
				type = 11;
				enum = "noyes";
			}
			arg4
			{
				title = "Crush Damage";
				default = 100;
			}
		}
		252
		{
			title = "Ceiling Raise to Nearest Ceiling";
			id = "Ceiling_RaiseToNearest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Change";
				type = 11;
				enum = "change";
			}
		}
		253
		{
			title = "Ceiling Lower to Lowest Ceiling";
			id = "Ceiling_LowerToLowest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Change";
				type = 11;
				enum = "change";
			}
			arg3
			{
				title = "Crushing damage";
			}
		}
		254
		{
			title = "Ceiling Lower to Floor";
			id = "Ceiling_LowerToFloor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Change";
				type = 11;
				enum = "change";
			}
			arg3
			{
				title = "Crushing Damage";
			}
			arg4
			{
				title = "Gap to Floor";
			}
		}
		255
		{
			title = "Ceiling Crush Once and Open A (silent)";
			id = "Ceiling_CrushRaiseAndStaySilA";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Lowering Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Raising Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg3
			{
				title = "Crush Damage";
				default = 100;
			}
			arg4
			{
				title = "Crush Mode";
				type = 11;
				enum = "crush_mode";
			}
		}
	}

	transfer
	{
		title = "Transfer";
		
		209
		{
			title = "Transfer Heights";
			id = "Transfer_Heights";
			requiresactivation = false;
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		210
		{
			title = "Transfer Floor Brightness";
			id = "Transfer_FloorLight";
			requiresactivation = false;
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		211
		{
			title = "Transfer Ceiling Brightness";
			id = "Transfer_CeilingLight";
			requiresactivation = false;
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}		
	}

	platform
	{
		206
		{
			title = "Platform Lower Wait Raise (lip)";
			id = "Plat_DownWaitUpStayLip";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Reverse Delay (tics)";
				type = 11;
				enum = "delay_tics";
				default = 35;
			}
			arg3
			{
				title = "Lip Amount";
			}
		}
		207
		{
			title = "Platform Perpetual Move (lip)";
			id = "Plat_PerpetualRaiseLip";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Reverse Delay (tics)";
				type = 11;
				enum = "delay_tics";
				default = 35;
			}
			arg3
			{
				title = "Lip Amount";
			}
		}
		228
		{
			title = "Platform Raise Tx0";
			id = "Plat_RaiseAndStayTx0";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Lockout Mode";
				type = 11;
				enum
				{
					0 = "Lockout in Heretic only";
					1 = "Don't lockout";
					2 = "Lockout in all games";
				}
			}
		}
		230
		{
			title = "Platform Raise by Value Tx (* 8)";
			id = "Plat_UpByValueStayTx";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
			arg2
			{
				title = "Raise by (* 8)";
			}
		}
		231
		{
			title = "Platform Toggle Ceiling";
			id = "Plat_ToggleCeiling";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
	}

	teleport
	{
		title = "Teleport";
		
		71	// Teleport_NoFog
		{
			arg1
			{
				title = "Teleport Dest. angle usage";
				type = 11;
				enum
				{
					0 = "Don't change angle and velocity (Hexen-compat)";
					1 = "Always use the teleport exit's angle (Strife-compat)";
					2 = "Adjust relatively to the teleport exit's angle, but in the wrong direction (Boom-compat)";
					3 = "Adjust relatively to the teleport exit's angle (Boom-fixed)";
				}
			}
			arg3
			{
				title = "Keep rel. Height";
				type = 11;
				enum = "noyes";
			}
		}
		74	// Teleport_NewMap
		{
			arg2
			{
				title = "Keep Orientation";
				type = 11;
				enum = "noyes";
			}
		}
		215
		{
			title = "Teleport to Line";
			id = "Teleport_Line";
			
			arg1
			{
				title = "Target Line Tag";
				type = 15;
			}
			arg2
			{
				title = "Reverse Angle";
				type = 11;
				enum = "noyes";
			}
		}
	}

	thing
	{
		17
		{
			title = "Thing Raise";
			id = "Thing_Raise";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		19
		{
			title = "Thing Stop";
			id = "Thing_Stop";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		72 // ThrustThing
		{
			arg2
			{
				title = "No Limit";
				type = 11;
				enum = "noyes";
			}
			arg3
			{
				title = "Target Thing Tag";
				type = 14;
			}
		}
		73 // DamageThing
		{
			arg1
			{
				title = "Death";
				type = 11;
				enum = "death_types";
			}
		}
		119
		{
			title = "Damage Thing by Tag";
			id = "Thing_Damage";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
			arg1
			{
				title = "Damage";
				default = 100;
			}
			arg2
			{
				title = "Death";
				type = 11;
				enum = "death_types";
			}
		}
		128
		{
			title = "Thing Thrust Z";
			id = "ThrustThingZ";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
			arg1
			{
				title = "Force";
			}
			arg2
			{
				title = "Down/Up";
				type = 11;
				enum = "updown";
			}
			arg3
			{
				title = "Set/Add";
				type = 11;
				enum = "setadd";
			}
		}
		135	// Thing_Spawn
		{
			arg3
			{
				title = "New Thing Tag";
				type = 14;
			}
		}
		137	// Thing_SpawnNoFog
		{
			arg3
			{
				title = "New Thing Tag";
				type = 14;
			}
		}
		176
		{
			title = "Change Thing Tag";
			id = "Thing_ChangeTID";
			
			arg0
			{
				title = "Old Thing Tag";
				type = 14;
			}
			arg1
			{
				title = "New Thing Tag";
				type = 14;
			}
		}
		248
		{
			title = "Heal Thing";
			id = "HealThing";
			
			arg0
			{
				title = "Heal Amount";
			}
			arg1
			{
				title = "Max health";
			}
		}
		
	}

	script
	{
		title = "Script";
		
		83	// Script Locked Execute
		{
			arg4	// Key Number
			{
				type = 11;
				enum = "keys";
			}
		}
		84
		{
			title = "Script Execute with Result";
			id = "ACS_ExecuteWithResult";
			
			arg0
			{
				title = "Script Number";
			}
			arg1
			{
				title = "Script Argument 1";
			}
			arg2
			{
				title = "Script Argument 2";
			}
			arg3
			{
				title = "Script Argument 3";
			}
			arg4
			{
				title = "Script Argument 4";
			}
		}
		226
		{
			title = "Script Execute Always";
			id = "ACS_ExecuteAlways";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Map Number";
			}
			
			arg2
			{
				title = "Script Argument 1";
			}
			
			arg3
			{
				title = "Script Argument 2";
			}
			
			arg4
			{
				title = "Script Argument 3";
			}
		}
	}

	end
	{
		243
		{
			title = "End Normal";
			id = "Exit_Normal";
			
			arg0
			{
				title = "Position";
			}
		}
		244
		{
			title = "End Secret";
			id = "Exit_Secret";
			
			arg0
			{
				title = "Position";
			}
		}
	}

	scroll
	{
		title = "Scroll";
				
		100 //Scroll_Texture_Left
		{
			arg1
			{
				title = "Sidedef Part";
				type = 12;
				enum = "sidedef_part";
			}
		}
		
		101 //Scroll_Texture_Right
		{
			arg1
			{
				title = "Sidedef Part";
				type = 12;
				enum = "sidedef_part";
			}
		}
		
		102 //Scroll_Texture_Up
		{
			arg1
			{
				title = "Sidedef Part";
				type = 12;
				enum = "sidedef_part";
			}
		}
		
		103 //Scroll_Texture_Down
		{
			arg1
			{
				title = "Sidedef Part";
				type = 12;
				enum = "sidedef_part";
			}
		}
		
		222
		{
			title = "Scroll Texture Model";
			id = "Scroll_Texture_Model";
			requiresactivation = false;
			
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Displacement";
					2 = "Accelerative";
				}
			}
		}
		
		223
		{
			title = "Scroll Floor";
			id = "Scroll_Floor";
			requiresactivation = false;
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Displacement";
					2 = "Accelerative";
					4 = "Scroll by linedef dx/dy";
				}
			}
			arg2
			{
				title = "Scroll";
				type = 11;
				enum
				{
					0 = "Texture only";
					1 = "Things only";
					2 = "Both";
				}
			}
			arg3
			{
				title = "Horizontal Speed";
				default = 128;
				type = 11;
				enum = "sector_scroll_speeds_x";
			}
			arg4
			{
				title = "Vertical Speed";
				default = 128;
				type = 11;
				enum = "sector_scroll_speeds_y";
			}
		}
		224
		{
			title = "Scroll Ceiling";
			id = "Scroll_Ceiling";
			requiresactivation = false;
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Displacement";
					2 = "Accelerative";
					4 = "Scroll by linedef dx/dy";
				}
			}
			arg3
			{
				title = "Horizontal Speed";
				default = 128;
				type = 11;
				enum = "sector_scroll_speeds_x";
			}
			arg4
			{
				title = "Vertical Speed";
				default = 128;
				type = 11;
				enum = "sector_scroll_speeds_y";
			}
		}
		225
		{
			title = "Scroll Texture by Offsets";
			id = "Scroll_Texture_Offsets";
			requiresactivation = false;
			
			arg0
			{
				title = "Sidedef Part";
				type = 12;
				enum = "sidedef_part";
			}
		}
	}


	light
	{
		232
		{
			title = "Light Strobe (Doom mode)";
			id = "Light_StrobeDoom";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Brightest Duration (tics)";
				type = 11;
				enum = "delay_tics";
				default = 35;
			}
			arg2
			{
				title = "Darkest Duration (tics)";
				type = 11;
				enum = "delay_tics";
				default = 35;
			}
		}
		233
		{
			title = "Light Change to Darkest Neightbour";
			id = "Light_MinNeighbor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		234
		{
			title = "Light Change to Brightest Neightbour";
			id = "Light_MaxNeighbor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
	}

	sector
	{
		title = "Sector";
		
		48
		{
			title = "Sector Attach 3D Midtex";
			id = "Sector_Attach3dMidtex";
			requiresactivation = false;
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			arg1
			{
				title = "Sector Tag";
				type = 13;
			}		
			arg2
			{
				title = "Floor / Ceiling";
				type = 11;
				enum = "floorceiling";
			}
		}
		
		57
		{
			title = "Sector Set Portal";
			id = "Sector_SetPortal";
			requiresactivation = false;
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Portal Type";
				type = 11;
				enum
				{
					0 = "Link to portal with same tag";
					1 = "Copy portal from second tag";
					2 = "Eternity-style skybox portal";
					3 = "Plane portal";
					4 = "Horizon portal";
					5 = "Copy portal to line";
					6 = "Linked portal";
				}
			}
			arg2
			{
				title = "Plane";
				type = 11;
				enum
				{
					0 = "Floor";
					1 = "Ceiling";
					2 = "Both";
					3 = "Any (\"Copy portal\" types only)";
				}
			}
			arg3
			{
				title = "Misc";
				tooltip = "For type 0 portal: specifies whether the line belongs to the sector viewed\nthrough the portal (1) or the sector in which the portal is seen (0).\nFor type 1 portal: specifies the sector tag of the portal to copy.";
			}
			arg4
			{
				title = "Opacity";
			}
		}
		185
		{
			title = "Sector Rotate Flat";
			id = "Sector_SetRotation";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Floor Angle";
				type = 8;
			}
			arg2
			{
				title = "Ceiling Angle";
				type = 8;
			}
		}
		186
		{
			title = "Sector Ceiling Panning";
			id = "Sector_SetCeilingPanning";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Horizontal Integral";
			}
			arg2
			{
				title = "Horizontal Fractional";
			}
			arg3
			{
				title = "Vertical Integral";
			}
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		187
		{
			title = "Sector Floor Panning";
			id = "Sector_SetFloorPanning";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Horizontal Integral";
			}
			arg2
			{
				title = "Horizontal Fractional";
			}
			arg3
			{
				title = "Vertical Integral";
			}
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		188
		{
			title = "Sector Ceiling Scale";
			id = "Sector_SetCeilingScale";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Horizontal Integral";
			}
			arg2
			{
				title = "Horizontal Fractional";
			}
			arg3
			{
				title = "Vertical Integral";
			}
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		189
		{
			title = "Sector Floor Scale";
			id = "Sector_SetFloorScale";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Horizontal Integral";
			}
			arg2
			{
				title = "Horizontal Fractional";
			}
			arg3
			{
				title = "Vertical Integral";
			}
			arg4
			{
				title = "Vertical Fractional";
			}
		}		
		218
		{
			title = "Sector Wind";
			id = "Sector_SetWind";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Wind Strength";
			}
			arg2
			{
				title = "Wind Angle";
				type = 22;
			}
			arg3
			{
				title = "Use Line Vector";
				type = 11;
				enum = "noyes";
			}
		}
		219
		{
			title = "Sector Friction";
			id = "Sector_SetFriction";
			requiresactivation = false;
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Friction Amount";
				type = 11;
				enum
				{
					0 = "Use Line Length";
					1 = "Very Sludgy";
					50 = "Sludgy";
					100 = "Normal";
					200 = "Icy";
					255 = "Very Icy";
				}
			}
		}
		
		220
		{
			title = "Sector Current";
			id = "Sector_SetCurrent";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Current Strength";
			}
			arg2
			{
				title = "Current Angle";
				type = 22;
			}
			arg3
			{
				title = "Use Line Vector";
				type = 11;
				enum = "noyes";
			}
		}
	}

	change
	{
		title = "Change";
		
		179
		{
			title = "Change Skill";
			id = "ChangeSkill";
			
			arg0
			{
				title = "New Skill Level";
				type = 11;
				enum 
				{
					0 = "Very Easy";
					1 = "Easy";
					2 = "Normal";
					3 = "Hard";
					4 = "Nightmare!";
				}
			}
		}
	}

	plane
	{
		title = "Plane";
		
		181
		{
			title = "Plane Align (slope)";
			id = "Plane_Align";
			requiresactivation = false;
			
			arg0
			{
				title = "Align Floor";
				type = 11;
				enum
				{
					0 = "None";
					1 = "Front";
					2 = "Back";
				}
			}
			arg1
			{
				title = "Align Ceiling";
				type = 11;
				enum
				{
					0 = "None";
					1 = "Front";
					2 = "Back";
				}
			}
		}
	}

	static
	{
		title = "Static";
		
		190
		{
			title = "Static Init";
			id = "Static_Init";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Property";
				type = 11;
				enum
				{
					0 = "Set the gravity to the length of the linedef";
					1 = "Set the light or fog color in a sector";
					2 = "Set damage to the length of the linedef";
					3 = "Define a sector link";
					255 = "Use the line's upper texture as the sky in any tagged sectors";
				}
			}
			arg2
			{
				title = "Flip Sky / Ceiling";
			}
			arg3
			{
				title = "Movement Type";
			}
		}
	}

	elevator
	{
		title = "Elevator";
		
		245
		{
			title = "Elevator Raise to Nearest Floor";
			id = "Elevator_RaiseToNearest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
		}
		246
		{
			title = "Elevator Move to Activated Floor";
			id = "Elevator_MoveToFloor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
		}
		247
		{
			title = "Elevator Lower to Nearest Floor";
			id = "Elevator_LowerToNearest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "plat_speeds";
				default = 16;
			}
		}
	}
	polyobj
	{
		1	// Polyobject Start Line
		{
			arg3
			{
				title = "Set Line ID";
				type = 0;
			}
		}
		5	// Polyobject Explicit Line
		{
			arg4
			{
				title = "Set Line ID";
				type = 0;
			}
		}
	}
	plane
	{
		181 //Plane_Align
		{
			arg2
			{
				title = "Set Line ID";
				type = 0;
			}
		}
	}
	scroll
	{
		52 //Scroll_Wall
		{
			arg0
			{
				title = "Set Line ID";
				type = 0;
			}
		}
		221 //Scroll_Texture_Both
		{
			arg0
			{
				title = "Line ID";
				type = 0;
			}
		}
		222 //Scroll_Texture_Model
		{
			arg0
			{
				title = "Set Line ID";
				type = 0;
			}
		}
	}
	sector
	{
		48 //Sector_Attach3dMidtex
		{
			arg0
			{
				title = "Line ID";
				type = 0;
			}
		}
	}
	teleport
	{
		215 //Teleport_Line
		{
			arg0
			{
				title = "Line ID";
				type = 0;
			}
			arg1
			{
				title = "Target Line ID";
				type = 0;
			}
		}
	}
}