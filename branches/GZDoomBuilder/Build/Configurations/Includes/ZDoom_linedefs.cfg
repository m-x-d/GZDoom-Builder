
// NOTE: This config contains four structures for different linedefs systems: Doom, Hexen and UDMF.
// The ZDoom structure is common to Hexen and UDMF and contains the bulk of the definitions.
// The Hexen and UDMF structures contain only the little tweaks needed for these formats.

doom
{
	script
	{
		title = "Script";
		
		270	// FraggleScript Execute
		{
			title = "FraggleScript Execute (GZDoom only!)";
			prefix = "WR";
		}
		273
		{
			title = "FraggleScript Execute one-way (GZDoom only!)";
			prefix = "WR";
		}
		274
		{
			title = "FraggleScript Execute (GZDoom only!)";
			prefix = "W1";
		}
		275
		{
			title = "FraggleScript Execute one-way (GZDoom only!)";
			prefix = "W1";
		}
		276
		{
			title = "FraggleScript Execute (GZDoom only!)";
			prefix = "SR";
		}
		277
		{
			title = "FraggleScript Execute (GZDoom only!)";
			prefix = "S1";
		}
		278
		{
			title = "FraggleScript Execute (GZDoom only!)";
			prefix = "GR";
		}
		279
		{
			title = "FraggleScript Execute (GZDoom only!)";
			prefix = "G1";
		}
	}
	sector
	{
		title = "Sector";
		
		280
		{
			title = "Transfer height: swimmable water (Legacy compat)";
			prefix = "";
		}
		281
		{
			title = "3D floor, Solid (Legacy compat)";
			prefix = "";
		}
		289
		{
			title = "3D floor, no light (Legacy compat)";
			prefix = "";
		}
		300
		{
			title = "3D floor, no light, half-translucent (Legacy compat)";
			prefix = "";
		}
		301
		{
			title = "3D floor, Swimmable water, half-translucent (Legacy compat)";
			prefix = "";
		}
		302
		{
			title = "3D floor, Fog zone, half-translucent (Legacy compat)";
			prefix = "";
		}
		303
		{
			title = "3D floor, Fog zone, translucent (Legacy compat)";
			prefix = "";
		}
		304
		{
			title = "3D floor, Swimmable water, opaque (Legacy compat)";
			prefix = "";
		}
		305
		{
			title = "3D floor, light zone (Legacy compat)";
			prefix = "";
		}
		306
		{
			title = "3D floor, Solid, translucent (Legacy compat)";
			prefix = "";
		}
		332
		{
			title = "3D floor, Vavoom-style";
			prefix = "";
		}
		400
		{
			title = "3D floor, Thick, dummy texture (EDGE compat)";
			prefix = "";
		}
		401
		{
			title = "3D floor, Thick, master upper texture (EDGE compat)";
			prefix = "";
		}
		402
		{
			title = "3D floor, Thick, master lower texture (EDGE compat)";
			prefix = "";
		}
		403
		{
			title = "3D floor, Liquid, solid (EDGE compat)";
			prefix = "";
		}
		404
		{
			title = "3D floor, Liquid, 20% translucent (EDGE compat)";
			prefix = "";
		}
		405
		{
			title = "3D floor, Liquid, 40% translucent (EDGE compat)";
			prefix = "";
		}
		406
		{
			title = "3D floor, Liquid, 60% translucent (EDGE compat)";
			prefix = "";
		}
		407
		{
			title = "3D floor, Liquid, 80% translucent (EDGE compat)";
			prefix = "";
		}
		408
		{
			title = "3D floor, Liquid, invisible (EDGE compat)";
			prefix = "";
		}
		413
		{
			title = "3D floor, Thin, opaque (EDGE compat)";
			prefix = "";
		}
		414
		{
			title = "3D floor, Thin, 20% translucent (EDGE compat)";
			prefix = "";
		}
		415
		{
			title = "3D floor, Thin, 40% translucent (EDGE compat)";
			prefix = "";
		}
		416
		{
			title = "3D floor, Thin, 60% translucent (EDGE compat)";
			prefix = "";
		}
		417
		{
			title = "3D floor, Thin, 80% translucent (EDGE compat)";
			prefix = "";
		}
	}
	
	scroll
	{
		422
		{
			title = "Scroll Right (EDGE compat)";
			prefix = "";
		}
		423
		{
			title = "Scroll Up (EDGE compat)";
			prefix = "";
		}
		424
		{
			title = "Scroll Down (EDGE compat)";
			prefix = "";
		}
		425
		{
			title = "Scroll Left And Up (EDGE compat)";
			prefix = "";
		}
		426
		{
			title = "Scroll Left And Down (EDGE compat)";
			prefix = "";
		}
		427
		{
			title = "Scroll Right And Up (EDGE compat)";
			prefix = "";
		}
		428
		{
			title = "Scroll Right And Down (EDGE compat)";
			prefix = "";
		}
	}
		
	floor
	{	
		434
		{
			title = "Floor Raise by 2 Units (EDGE compat)";
			prefix = "S1";
		}
		435
		{
			title = "Floor Raise by 2 Units (EDGE compat)";
			prefix = "SR";
		}
		436
		{
			title = "Floor Raise by 2 Units (EDGE compat)";
			prefix = "W1";
		}
		437
		{
			title = "Floor Raise by 2 Units (EDGE compat)";
			prefix = "WR";
		}
		438
		{
			title = "Floor Raise by 2 Units (EDGE compat)";
			prefix = "G1";
		}
		439
		{
			title = "Floor Raise by 2 Units (EDGE compat)";
			prefix = "GR";
		}
	}
	translucent
	{
		title = "Translucent";
		
		284
		{
			title = "Translucent line (50% opaque)";
			prefix = "";
		}
		285
		{
			title = "Translucent line (75% opaque)";
			prefix = "";
		}
		286
		{
			title = "Translucent line (25% opaque)";
			prefix = "";
		}
		287
		{
			title = "Translucent line (additive)";
			prefix = "";
		}
		288
		{
			title = "Translucent line (100% opaque)";
			prefix = "";
		}
		409
		{
			title = "Translucent line (20% opaque)";
			prefix = "";
		}
		410
		{
			title = "Translucent line (40% opaque)";
			prefix = "";
		}
		411
		{
			title = "Translucent line (60% opaque)";
			prefix = "";
		}
		412
		{
			title = "Translucent line (80% opaque)";
			prefix = "";
		}
	}
	init
	{
		title = "Init";
		
		282
		{
			title = "Init Color (Legacy compat)";
			prefix = "";
		}
		333
		{
			title = "Init Gravity";
			prefix = "";
		}
		334
		{
			title = "Init Color";
			prefix = "";
		}
		335
		{
			title = "Init Damage";
			prefix = "";
		}
	}	
	line
	{
		title = "Line";
		
		336
		{
			title = "Line Mirror";
			prefix = "";
		}
		337
		{
			title = "Line Horizon";
			prefix = "";
		}
	}
	
	floor
	{
		338
		{
			title = "Floor Waggle 24";
			prefix = "W1";
		}
		339
		{
			title = "Floor Waggle 12";
			prefix = "W1";
		}
	}
	
	plane
	{
		title = "Plane";
		
		340
		{
			title = "Plane Align Floor at front";
			prefix = "";
		}
		341
		{
			title = "Plane Align Ceiling at front";
			prefix = "";
		}
		342
		{
			title = "Plane Align Floor and Ceiling at front";
			prefix = "";
		}
		343
		{
			title = "Plane Align Floor at back";
			prefix = "";
		}
		344
		{
			title = "Plane Align Ceiling at back";
			prefix = "";
		}
		345
		{
			title = "Plane Align Floor and Ceiling at back";
			prefix = "";
		}
		346
		{
			title = "Plane Align Floor at back and Ceiling at front";
			prefix = "";
		}
		347
		{
			title = "Plane Align Floor at front and Ceiling at back";
			prefix = "";
		}
	}

	autosave
	{
		title = "Autosave";
		
		348
		{
			title = "Autosave";
			prefix = "W1";
		}
		349
		{
			title = "Autosave";
			prefix = "S1";
		}
	}

	transfer
	{
		title = "Transfer";
		
		350
		{
			title = "Transfer height fake floor";
			prefix = "";
		}
		351
		{
			title = "Transfer height fake floor clip";
			prefix = "";
		}
	}

	scroll
	{
		352
		{
			title = "Copy ceiling scroller";
			prefix = "";
		}
		353
		{
			title = "Copy floor scroller";
			prefix = "";
		}
		354
		{
			title = "Copy carrying floor scroller";
			prefix = "";
		}
	}		
}

zdoom
{
	polyobj
	{
		title = "Polyobj";
		
		59
		{
			title = "Polyobj Move To Spot (override)";
			arg0
			{
				title = "Polyobj Number";
			}
			arg1
			{
				title = "Speed";
			}
			arg2
			{
				title = "Target TID";
			}
		}
		86
		{
			title = "Polyobj Move To Spot";
			arg0
			{
				title = "Polyobj Number";
			}
			arg1
			{
				title = "Speed";
			}
			arg2
			{
				title = "Target TID";
			}
		}
		87
		{
			title = "Polyobj Stop";
			arg0
			{
				title = "Polyobj Number";
			}
		}
		88
		{
			title = "Polyobj Move To";
			arg0
			{
				title = "Polyobj Number";
			}
			arg1
			{
				title = "Speed";
			}
			arg2
			{
				title = "Target X Pos";
			}
			arg3
			{
				title = "Target X Pos";
			}
		}
		89
		{
			title = "Polyobj Move To (override)";
			arg0
			{
				title = "Polyobj Number";
			}
			arg1
			{
				title = "Speed";
			}
			arg2
			{
				title = "Target X Pos";
			}
			arg3
			{
				title = "Target X Pos";
			}
		}
	}

	line
	{
		title = "Line";
		
		9
		{
			title = "Line Horizon";
		}	
		121	// Line Identification
		{
			arg1
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Sound boundary";
					2 = "Railing";
					4 = "Block floating monsters";
					8 = "Clip mid texture";
					16 = "Wrap mid texture";
					32 = "3D mid texture";
					64 = "Check switch height";
				}
			}
			arg4
			{
				title = "Set Line ID High";
			}
		}
		182
		{
			title = "Line Mirror";
		}
	}

	door
	{
		10
		{
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "door_speeds";
			}
		}
		11
		{
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "door_speeds";
			}
		}
		12
		{
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "door_speeds";
			}
			arg2
			{
				title = "Close Delay";
				type = 11;
				enum = "delays";
			}
		}
		13
		{
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "door_speeds";
			}
			arg2
			{
				title = "Close Delay";
				type = 11;
				enum = "delays";
			}
		}
		14
		{
			title = "Door Animated";
			
			arg0
			{
				title = "Sector tag";
				type = 13;
			}
			arg1
			{
				title = "Animation Speed";
				type = 11;
				enum = "door_speeds";
			}
			arg2
			{
				title = "Close Delay";
				type = 11;
				enum = "delays";
			}
			arg3
			{
				title = "Lock";
				type = 11;
				enum = "keys";
			}
		}
		202
		{
			title = "Door Generic";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "door_speeds";
			}
			arg2
			{
				title = "Type";
				type = 11;
				enum = "generic_door_types";
			}
			arg3
			{
				title = "Delay";
				type = 11;
				enum = "delays";
			}
			arg4
			{
				title = "Lock";
				type = 11;
				enum = "keys";
			}
		}
		
		249
		{
			title = "Door Close Wait Open";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
				type = 11;
				enum = "door_speeds";
			}
			arg2
			{
				title = "Delay";
				type = 11;
				enum = "delays";
			}
			arg3
			{
				title = "Light Tag";
				type = 13;
			}
		}
	}

	autosave
	{
		title = "Autosave";
		
		15
		{
			title = "Autosave";
		}
	}

	floor
	{
		28	// Floor Crusher Start
		{
			arg3
			{
				title = "Crush Mode";
			}
		}
		37
		{
			title = "Floor Move";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Target Height";
			}
			arg3
			{
				title = "Negative Height";
				type = 11;
				enum = "noyes";
			}
		}
		
		138
		{
			title = "Floor Waggle";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Amplitude";
			}
			arg2
			{
				title = "Frequency";
			}
			arg3
			{
				title = "Phase Offset";
			}
			arg4
			{
				title = "Duration";
			}
		}
		
		200
		{
			title = "Floor Generic Change";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Movement Amount";
			}
			arg3
			{
				title = "Target";
				type = 11;
				enum = "generic_floor_target";
			}
			arg4
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Remove effect";
					2 = "Change texture";
					3 = "Change special";
					4 = "Numeric model";
					8 = "Raise";
					16 = "Crusher";
				}
			}
		}
		
		235
		{
			title = "Floor Transfer Trigger";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		236
		{
			title = "Floor Transfer Numeric";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		238
		{
			title = "Floor Raise to Lowest Ceiling";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		239
		{
			title = "Floor Raise by TxTy";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		240
		{
			title = "Floor Raise by Texture";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		241
		{
			title = "Floor Lower to Lowest TxTy";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		242
		{
			title = "Floor Lower to Highest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Adjust Target Height";
			}
		}
		250
		{
			title = "Floor Donut";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Pillar Movement Speed";
			}
			arg2
			{
				title = "Stairs Movement Speed";
			}
		}
		
		251
		{
			title = "Floor and Ceiling Lower and Raise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Floor Movement Speed";
			}
			arg2
			{
				title = "Ceiling Movement Speed";
			}
		}
	}

	stairs
	{
		204
		{
			title = "Stairs Generic Build";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Step Amount";
			}
			arg3
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Upwards";
					2 = "Ignore textures";
				}
			}
			arg4
			{
				title = "Reset Delay";
			}
		}
		
		217
		{
			title = "Stairs Build Doom";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Step Amount";
			}
			arg3
			{
				title = "Build Step Delay";
			}
			arg4
			{
				title = "Reset Delay";
			}
		}
	}


	pillar
	{
		94	// Pillar Build and Crush
		{
			arg3
			{
				title = "Crush Mode";
			}
		}
	}


	forcefield
	{
		title = "Forcefield";
		
		33
		{
			title = "Forcefield Set";
		}
		34
		{
			title = "Forcefield Remove";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
	}


	ceiling
	{
		title = "Ceiling";
		
		38
		{
			title = "Ceiling Waggle";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Amplitude";
			}
			arg2
			{
				title = "Frequency";
			}
			arg3
			{
				title = "Phase Offset";
			}
			arg4
			{
				title = "Duration";
			}
		}
		42	// Ceiling Crusher Start
		{
			arg3
			{
				title = "Crush Mode";
			}
		}
		43	// Ceiling Crush Once
		{
			arg3
			{
				title = "Crush Mode";
			}
			
		}
		45	// Ceiling Crush Once and Open
		{
			arg3
			{
				title = "Crush Mode";
			}
			
		}
		47
		{
			title = "Ceiling Move";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Movement Amount";
			}
			arg3
			{
				title = "Negative Height";
				type = 11;
				enum = "noyes";
			}
		}
		169
		{
			title = "Ceiling Generic Crush Hexen Mode";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Crush Movement Speed";
			}
			arg2
			{
				title = "Raise Movement Amount";
			}
			arg3
			{
				title = "Silent";
			}
			arg4
			{
				title = "Crush Damage";
			}
		}
		192
		{
			title = "Ceiling Lower to Highest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		193
		{
			title = "Ceiling Lower Instantly";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		194
		{
			title = "Ceiling Raise Instantly";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		195
		{
			title = "Ceiling Crush Once and Open A";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Crush Movement Speed";
			}
			arg2
			{
				title = "Raise Movement Speed";
			}
			arg3
			{
				title = "Crush Damage";
			}
			arg4
			{
				title = "Crush Mode";
			}
			
		}
		196
		{
			title = "Ceiling Crush Start A";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Crush Movement Speed";
			}
			arg2
			{
				title = "Raise Movement Speed";
			}
			arg3
			{
				title = "Crush Damage";
			}
			arg4
			{
				title = "Crush Mode";
			}
			
		}
		197
		{
			title = "Ceiling Crush Start A (silent)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Crush Movement Speed";
			}
			arg2
			{
				title = "Raise Movement Speed";
			}
			arg3
			{
				title = "Crush Damage";
			}
			arg4
			{
				title = "Crush Mode";
			}
			
		}
		198
		{
			title = "Ceiling Raise (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		199
		{
			title = "Ceiling Lower (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		
		201
		{
			title = "Ceiling Generic Change";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Movement Amount";
			}
			arg3
			{
				title = "Target";
				type = 11;
				enum = "generic_ceiling_target";
			}
			arg4
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Remove effect";
					2 = "Change texture";
					3 = "Change effect";
					4 = "Numeric model";
					8 = "Raise";
					16 = "Crusher";
				}
			}
		}
		205
		{
			title = "Ceiling Generic Crush";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Crush Movement Speed";
			}
			arg2
			{
				title = "Raise Movement Amount";
			}
			arg3
			{
				title = "Silent";
			}
			arg4
			{
				title = "Crush Damage";
			}
		}
		252
		{
			title = "Ceiling Raise to Nearest Ceiling";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		253
		{
			title = "Ceiling Lower to Lowest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		254
		{
			title = "Ceiling Lower to Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		255
		{
			title = "Ceiling Crush Once and Open A (silent)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Crush Movement Speed";
			}
			arg2
			{
				title = "Raise Movement Speed";
			}
			arg3
			{
				title = "Crush Damage";
			}
			arg4
			{
				title = "Mode";
				type = 11;
				enum
				{
					0 = "Compatibility";
					1 = "Doom";
					2 = "Hexen";
				}
			}
		}
	}

	breakable
	{
		title = "Breakable";
		
		49
		{
			title = "Breakable Glass";
		}
	}

	transfer
	{
		title = "Transfer";
		
		50
		{
			title = "Transfer Brightness Level";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Options";
				type = 11;
				enum
				{
					0 = "From Control Ceiling Down to Type 0";
					1 = "From Target Ceiling Down to Control Floor";
					2 = "From Control Ceiling Down to Any";
				}
			}
		}
		209
		{
			title = "Transfer Heights";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Use fake ceiling/floor";
					2 = "Draw fake floor only";
					4 = "Inside sector only";
					8 = "Swimmable below fake";
					16 = "Do not draw";
					32 = "Keep lighting";
				}
			}
		}
		
		210
		{
			title = "Transfer Floor Brightness";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		211
		{
			title = "Transfer Ceiling Brightness";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		16
		{
			title = "Transfer Wall Brightness";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Flags";
			}
		}
		
	}

	platform
	{
		172
		{
			title = "Platform Raise to Nearest Wait Lower";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Reverse Delay";
			}
		}
		203
		{
			title = "Platform Generic Change";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Reverse Delay";
			}
			arg3
			{
				title = "Type";
				type = 11;
				enum = "generic_lift_types";
			}
			arg4
			{
				title = "Movement Amount";
			}
		}
		206
		{
			title = "Platform Lower Wait Raise (lip)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Reverse Delay";
			}
			arg3
			{
				title = "Lip Amount";
			}
			arg4
			{
				title = "Movement sound type";
			}
		}
		207
		{
			title = "Platform Perpetual Move (lip)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Reverse Delay";
			}
			arg3
			{
				title = "Lip Amount";
			}
		}
		228
		{
			title = "Platform Raise Tx0";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		230
		{
			title = "Platform Raise by Value Tx (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
			arg2
			{
				title = "Movement Amount";
			}
		}
		231
		{
			title = "Platform Toggle Ceiling";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
	}

	teleport
	{
		title = "Teleport";
		
		39
		{
			title = "Teleport to Pain State (silent)";
			
			arg0
			{
				title = "Target MapSpot Tag";
				type = 14;
			}
			arg1
			{
				title = "Target Sector Tag";
				type = 13;
			}
		}
		70	// Teleport
		{
			arg2
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
		}
		74	// Teleport To Map
		{
			arg2
			{
				title = "Keep orientation";
				type = 11;
				enum = "noyes";
			}
		}
		76
		{
			title = "Teleport Other";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			arg1
			{
				title = "Target Thing ID";
				type = 14;
			}
			arg2
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
		}
		77
		{
			title = "Teleport Group";
			
			arg0
			{
				title = "Group Thing ID";
				type = 14;
			}
			arg1
			{
				title = "Source Thing ID";
				type = 14;
			}
			arg2
			{
				title = "Target Thing ID";
				type = 14;
			}
			arg3
			{
				title = "Move source";
				type = 11;
				enum = "yesno";
			}
			arg4
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
		}
		78
		{
			title = "Teleport in sector";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Source Thing ID";
				type = 14;
			}
			arg2
			{
				title = "Target Thing ID";
				type = 14;
			}
			arg3
			{
				title = "Fog";
				type = 11;
				enum = "noyes";
			}
			arg4
			{
				title = "Group Thing ID";
				type = 14;
			}
		}
		154
		{
			title = "Teleport (No Stop)";
			
			arg0
			{
				title = "Target MapSpot Tag";
				type = 14;
			}
			arg1
			{
				title = "Target Sector Tag";
				type = 13;
			}
			arg2
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
		}
		215
		{
			title = "Teleport To Line";
			
			arg1
			{
				title = "Target Line Tag";
				type = 15;
			}
			arg2
			{
				title = "Reverse Angle";
				type = 11;
				enum = "noyes";
			}
		}
	}

	thing
	{
		17
		{
			title = "Thing Raise";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		18
		{
			title = "Thing Start Converstation";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
			arg1
			{
				title = "Face talker";
				type = 11;
				enum = "yesno";
			}
		}
		19
		{
			title = "Thing Stop";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		119
		{
			title = "Thing Damage";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			arg1
			{
				title = "Damage";
			}
			arg2
			{
				title = "Death";
				type = 11;
				enum = "death_types";
			}
		}
		125
		{
			title = "Thing Move";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			arg1
			{
				title = "Target Thing ID";
				type = 14;
			}
		}
		127
		{
			title = "Thing Set Special";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			arg1
			{
				title = "Special";
				type = 4;
			}
			arg2
			{
				title = "Special arg 1";
			}
			arg3
			{
				title = "Special arg 2";
			}
			arg4
			{
				title = "Special arg 3";
			}
		}
		128
		{
			title = "Thing Thrust Z";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			arg1
			{
				title = "Force";
			}
			arg2
			{
				title = "Down Up";
				type = 11;
				enum = "updown";
			}
			arg3
			{
				title = "Add Set";
				type = 11;
				enum = "addset";
			}
		}
		134	// Thing Projectile
		{
			arg1	// Spawn Thing
			{
				type = 11;
				enum = "spawnthing";
			}
		}
		135	// Thing Spawn
		{
			arg1	// Spawn Thing
			{
				type = 11;
				enum = "spawnthing";
			}
		}
		136	// Thing Projectile with Gravity
		{
			arg1	// Spawn Thing
			{
				type = 11;
				enum = "spawnthing";
			}
		}
		137	// Thing Spawn (silent)
		{
			arg1	// Spawn Thing
			{
				type = 11;
				enum = "spawnthing";
			}
		}
		139
		{
			title = "Thing Spawn Facing";
			
			arg0
			{
				title = "Mapspot ID";
				type = 14;
			}
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			arg2
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
			arg3
			{
				title = "New Thing ID";
			}
		}
		175
		{
			title = "Thing Projectile Intercept";
			
			arg0
			{
				title = "Mapspot ID";
				type = 14;
			}
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			arg2
			{
				title = "Speed";
			}
			arg3
			{
				title = "Thing ID target";
				type = 14;
			}
			arg4
			{
				title = "New Thing ID";
			}
		}
		176
		{
			title = "Thing ID Change";
			
			arg0
			{
				title = "Old Thing ID";
				type = 14;
			}
			arg1
			{
				title = "New Thing ID";
			}
		}
		177
		{
			title = "Thing Hate";
			
			arg0
			{
				title = "Hater ID";
				type = 14;
			}
			arg1
			{
				title = "Hatee ID";
				type = 14;
			}
			arg2
			{
				title = "Hate";
				type = 11;
				enum
				{
					0 = "Target only";
					1 = "Target and Player";
					2 = "Forced Target and Player";
					3 = "Hunt Target and Player";
					4 = "Forced Hunt Target and Player";
					5 = "Target, Ignore Player";
					6 = "Forced Target, Ignore Player";
				}
			}
		}
		178
		{
			title = "Thing Aimed Projectile";
			
			arg0
			{
				title = "Mapspot ID";
				type = 14;
			}
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			arg2
			{
				title = "Speed";
			}
			arg3
			{
				title = "Target Thing ID";
				type = 14;
			}
			arg4
			{
				title = "New Thing ID";
			}
		}
		180
		{
			title = "Thing Set Translation";
			
			arg0
			{
				title = "Thing ID";
			}
			arg1
			{
				title = "Translation index";
			}
		}
		229
		{
			title = "Thing Goal";
			
			arg0
			{
				title = "Monster Thing Tag";
				type = 14;
			}
			arg1
			{
				title = "Target Thing Tag";
				type = 14;
			}
			arg2
			{
				title = "Delay";
			}
		}
		248
		{
			title = "Thing Heal";
			
			arg0
			{
				title = "Health Amount";
			}
		}
		
	}

	script
	{
		title = "Script";
		
		83	// Script Locked Execute
		{
			arg4	// Key Number
			{
				type = 11;
				enum = "keys";
			}
		}
		84
		{
			title = "Script Execute with Result";
			
			arg0
			{
				title = "Script Number";
			}
			arg1
			{
				title = "Script Argument 1";
			}
			arg2
			{
				title = "Script Argument 2";
			}
			arg3
			{
				title = "Script Argument 3";
			}
		}
		85
		{
			title = "Script Locked Execute (Door message)";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Map Number";
			}
			
			arg2
			{
				title = "Script Argument 1";
			}
			
			arg3
			{
				title = "Script Argument 2";
			}
			
			arg4
			{
				title = "Key Number";
				type = 11;
				enum = "keys";
			}
		}
		158
		{
			title = "FraggleScript Execute (GZDoom only!)";
			
			arg0
			{
				title = "Script Number";
			}
			arg1
			{
				title = "Side";
			}
			arg2
			{
				title = "Key";
				type = 11;
				enum = "keys";
			}
			arg3
			{
				title = "Message";
				enum
				{
					0 = "Open door";
					1 = "Activate object";
				}
			}
		}
		226
		{
			title = "Script Execute Always";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Map Number";
			}
			
			arg2
			{
				title = "Script Argument 1";
			}
			
			arg3
			{
				title = "Script Argument 2";
			}
			
			arg4
			{
				title = "Script Argument 3";
			}
		}
	}

	end
	{
		243
		{
			title = "End Normal";
			
			arg0
			{
				title = "Position";
			}
		}
		244
		{
			title = "End Secret";
			
			arg0
			{
				title = "Position";
			}
		}
	}

	scroll
	{
		title = "Scroll";
		
		52
		{
			title = "Scroll Wall";
			
			arg0
			{
				title = "Line ID";
			}
			arg1
			{
				title = "x";
			}
			arg2
			{
				title = "y";
			}
			arg3
			{
				title = "Side";
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Scroll upper";
					2 = "Scroll middle";
					4 = "Scroll lower";
				}
			}
		}
		
		221
		{
			title = "Scroll Texture Both";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			arg1
			{
				title = "Left Speed";
			}
			arg2
			{
				title = "Right Speed";
			}
			arg3
			{
				title = "Down Speed";
			}
			arg4
			{
				title = "Up Speed";
			}
		}
		222
		{
			title = "Scroll Texture Model";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Displacement";
					2 = "Accelerative";
				}
			}
		}
		
		223
		{
			title = "Scroll Floor";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Displacement";
					2 = "Accelerative";
					4 = "Scroll by linedef dx/dy";
				}
			}
			arg2
			{
				title = "Scroll";
				type = 11;
				enum
				{
					1 = "Texture only";
					2 = "Things only";
					4 = "Both";
				}
			}
			arg3
			{
				title = "Horizontal Speed";
			}
			arg4
			{
				title = "Vertical Speed";
			}
		}
		224
		{
			title = "Scroll Ceiling";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Displacement";
					2 = "Accelerative";
					4 = "Scroll by linedef dx/dy";
				}
			}
			arg2
			{
				title = "Scroll";
				type = 11;
				enum
				{
					1 = "Texture only";
					2 = "Things only";
					4 = "Both";
				}
			}
			arg3
			{
				title = "Horizontal Speed";
			}
			arg4
			{
				title = "Vertical Speed";
			}
		}
		225
		{
			title = "Scroll Texture by Offsets";
		}
	}


	light
	{
		109
		{
			title = "Lightning control";
			
			arg0
			{
				title = "Mode";
			}
		}
		117
		{
			title = "Light Stop";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		232
		{
			title = "Light Strobe Doom";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Brightest Duration";
			}
			arg2
			{
				title = "Darkest Duration";
			}
		}
		233
		{
			title = "Light Change to Darkest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		234
		{
			title = "Light Change to Brightest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
	}

	earthquake
	{
		title = "Earthquake";
		
		120
		{
			title = "Earthquake";
			
			arg0
			{
				title = "Intensity";
			}
			arg1
			{
				title = "Duration";
			}
			arg2
			{
				title = "Damage Radius";
			}
			arg3
			{
				title = "Tremor Radius";
			}
			arg4
			{
				title = "Thing Tag";
				type = 14;
			}
		}
	}

	use
	{
		title = "Use";
		
		129
		{
			title = "Use Puzzle Item";
			
			arg0
			{
				title = "Item Number";
			}
			arg1
			{
				title = "Script Number";
			}
			arg2
			{
				title = "Script Argument 1";
			}
			arg3
			{
				title = "Script Argument 2";
			}
			arg4
			{
				title = "Script Argument 3";
			}
		}
	}

	sector
	{
		title = "Sector";
		
		48
		{
			title = "Sector Attach 3D Midtex";
			
			arg0
			{
				title = "Line ID";
			}
			arg1
			{
				title = "Sector Tag";
			}		
			arg2
			{
				title = "Floor / Ceiling";
				type = 11;
				enum = "floorceiling";
			}
		}
		51
		{
			title = "Sector Set Link";
			
			arg0
			{
				title = "Control Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Target Sector Tag";
				type = 13;
			}
			arg2
			{
				title = "Floor / Ceiling";
				type = 11;
				enum = "floorceiling";
			}
			arg3
			{
				title = "Move Type";
				type = 12;
				enum
				{
					1 = "Link Tgt's floor to 'surface'";
					2 = "Link Tgt's ceiling to 'surface'";
					4 = "Floor move at opposite (need bit1)";
					8 = "Ceiling move at opposite (need bit2)";
				}
			}
		}
		54
		{
			title = "Sector Change Flags";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Set Flags";
				type = 12;
				enum = "sector_flags";
			}
			arg2
			{
				title = "Clear Flags";
				type = 12;
				enum = "sector_flags";
			}
		}
		57
		{
			title = "Sector Set Portal";
			
			arg0
			{
				title = "Sector Tag";
			}
			arg1
			{
				title = "Portal Type";
				type = 11;
				enum
				{
					0 = "Link to portal with same tag";
					1 = "Copy portal from second tag";
					2 = "Eternity-style skybox portal";
				}
			}		
			arg2
			{
				title = "Floor / Ceiling";
				type = 11;
				enum = "floorceilingboth";
			}
			arg3
			{
				title = "Misc";
			}
			arg4
			{
				title = "Translucency";
			}
		}
		58
		{
			title = "Sector Copy Scroller";
			
			arg0
			{
				title = "Sector Tag";
			}
			arg1
			{
				title = "Scroller Type";
				type = 12;
				enum
				{
					1 = "Copy ceiling scroller";
					2 = "Copy floor scroller";
					4 = "Copy carrying effect";
				}
			}		
		}
		160
		{
			title = "Sector 3D Floor (OpenGL only)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Type";
				type = 12;
				enum
				{
					0 = "Vavoom-Style";
					1 = "Solid";
					2 = "Swimmable";
					3 = "Non-Solid";
					4 = "Render-Inside";
					16 = "Invert Visibility Rules";
					32 = "Invert Shootability Rules";
				}
			}
			arg2
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Disables light effects";
					2 = "Restricts light Inside";
					4 = "Fog Effect";
					8 = "Ignores bottom height";
					16 = "Uses upper texture";
					32 = "Uses lower texture";
					64 = "Additive transluency";
				}
			}
			arg3
			{
				title = "Alpha";
			}
			arg4
			{
				title = "Hi-Tag";
			}
		}
		161
		{
			title = "Sector Set Contents (Vavoom compatibility)";
			
			arg0
			{
				title = "Type";
				type = 11;
				enum
				{
					0 = "Empty";
					1 = "Water";
					2 = "Lava";
					3 = "Nukage";
					4 = "Slime";
					5 = "Hellslime";
					6 = "Blood";
					7 = "Sludge";
					8 = "Hazard";
					9 = "Boom-style water";
				}
			}
			arg1
			{
				title = "Translucency Percent";
			}
			arg2
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Don't block movement";
					2 = "Don't block sight";
					4 = "Don't block shooting";
					8 = "Additive translucency";
				}
			}
		}
		185
		{
			title = "Sector Rotate Alignment";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Floor Angle";
			}
			arg2
			{
				title = "Ceiling Angle";
			}
		}
		186
		{
			title = "Sector Ceiling Panning";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Horizontal Integral";
			}
			arg2
			{
				title = "Horizontal Fractional";
			}
			arg3
			{
				title = "Vertical Integral";
			}
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		187
		{
			title = "Sector Floor Panning";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Horizontal Integral";
			}
			arg2
			{
				title = "Horizontal Fractional";
			}
			arg3
			{
				title = "Vertical Integral";
			}
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		188
		{
			title = "Sector Ceiling Scale";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Horizontal Integral";
			}
			arg2
			{
				title = "Horizontal Fractional";
			}
			arg3
			{
				title = "Vertical Integral";
			}
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		189
		{
			title = "Sector Floor Scale";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Horizontal Integral";
			}
			arg2
			{
				title = "Horizontal Fractional";
			}
			arg3
			{
				title = "Vertical Integral";
			}
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		212
		{
			title = "Sector Color";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Red";
			}
			arg2
			{
				title = "Green";
			}
			arg3
			{
				title = "Blue";
			}
		}
		213
		{
			title = "Sector Fade";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Red";
			}
			arg2
			{
				title = "Green";
			}
			arg3
			{
				title = "Blue";
			}
		}
		214
		{
			title = "Sector Damage";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Damage Amount";
			}
			arg2
			{
				title = "Death";
				type = 11;
				enum = "death_types";
			}
		}
		216
		{
			title = "Sector Gravity";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Gravity Integral";
			}
			arg2
			{
				title = "Gravity Fractional";
			}
		}
		
		218
		{
			title = "Sector Wind";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Wind Strength";
			}
			arg2
			{
				title = "Wind Angle";
			}
			arg3
			{
				title = "Line Vector";
			}
		}
		219
		{
			title = "Sector Friction";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Friction Amount";
			}
		}
		
		220
		{
			title = "Sector Current";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Current Strength";
			}
			arg2
			{
				title = "Current Angle";
			}
			arg3
			{
				title = "Line Vector";
			}
		}
	}

	alert
	{
		title = "Alert";
		
		173
		{
			title = "Alert monsters";
			
			arg0
			{
				title = "Target ID";
				type = 14;
			}
			arg1
			{
				title = "Emitter ID";
				type = 14;
			}
		}
	}

	communicator
	{
		title = "Communicator";
		
		174
		{
			title = "Communicator message";
			
			arg0
			{
				title = "Message ID";
			}
			arg1
			{
				title = "Front side only";
				type = 11;
				enum = "noyes";
			}
			arg2
			{
				title = "Message identification";
				type = 11;
				enum = "noyes";
			}
			arg3
			{
				title = "Add to Log";
				type = 11;
				enum = "yesno";
			}
		}
	}

	change
	{
		title = "Change";
		
		157
		{
			title = "Set Global Fog Parameter (GZDoom only!)";
			
			arg0
			{
				title = "Property";
				type = 11;
				enum
				{
					0 = "Density";
					1 = "Outside density";
					2 = "Skyfog";
				}
			}
			arg1
			{
				title = "Value";
			}
		}
		179
		{
			title = "Change Skill";
			
			arg0
			{
				title = "New Skill Level";
			}
		}
	}

	plane
	{
		title = "Plane";
		
		118
		{
			title = "Plane Copy (slope)";
			
			arg0
			{
				title = "Front Floor Tag";
			}
			arg1
			{
				title = "Front Ceiling Tag";
			}
			arg2
			{
				title = "Back Floor Tag";
			}
			arg3
			{
				title = "Back Ceiling Tag";
			}
			arg4
			{
				title = "Share slope";
				type = 12;
				enum
				{
					1 = "Front floor to back sector";
					2 = "Back floor to front sector";
					4 = "Front ceiling to back sector";
					8 = "Back ceiling to front sector";
				}
			}
		}
		159
		{
			title = "Plane Reflection (OpenGL only)";
			
			arg0
			{
				title = "Sector Tag";
			}
			arg1
			{
				title = "Floor reflectiveness";
			}
			arg2
			{
				title = "Ceiling reflectiveness";
			}
		}
		181
		{
			title = "Plane Align (slope)";
			
			arg0
			{
				title = "Align Floor";
				type = 11;
				enum
				{
					0 = "None";
					1 = "Front";
					2 = "Back";
				}
			}
			arg1
			{
				title = "Align Ceiling";
				type = 11;
				enum
				{
					0 = "None";
					1 = "Front";
					2 = "Back";
				}
			}
		}
	}

	static
	{
		title = "Static";
		
		190
		{
			title = "Static Init";
			
			arg0
			{
				title = "Sector Tag";
			}
			arg1
			{
				title = "Property";
			}
			arg2
			{
				title = "Flip Sky";
			}
		}
	}

	player
	{
		title = "Player";
		
		145
		{
			title = "Player Set Team (Skulltag only)";
			arg0
			{
				title = "Team";
				type = 11;
				enum = "teams";
			}
		}
		191
		{
			title = "Player Property";
			
			arg0
			{
				title = "Everyone";
			}
			arg1
			{
				title = "Toggle";
			}
			arg2
			{
				title = "Property";
			}
		}
	}

	team
	{
		title = "Team";
		
		152
		{
			title = "Team Player Score (Skulltag only)";
			arg0
			{
				title = "Points";
			}
		}
		153
		{
			title = "Team Give Points (Skulltag only)";
			arg0
			{
				title = "Team";
				type = 11;
				enum = "teams";
			}
			arg1
			{
				title = "Points";
			}
			arg2
			{
				title = "Announcer";
				type = 11;
				enum = "noyes";
			}
		}
	}

	translucent
	{
		title = "Translucent";
		
		208
		{
			title = "Translucent Line";
			
			arg1
			{
				title = "Transparency Amount";
			}
			arg2
			{
				title = "Additive";
				type = 11;
				enum = "yesno";
			}
		}
	}

	point
	{
		title = "Point";
		
		227
		{
			title = "Point Pusher and Puller Force";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Thing Tag";
				type = 14;
			}
			arg2
			{
				title = "Strength";
			}
			arg3
			{
				title = "Line Vector";
			}
		}
	}

	camera
	{
		title = "Camera";
		
		237
		{
			title = "Camera Change";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
			arg1
			{
				title = "Everyone";
				type = 11;
				enum = "noyes";
			}
			arg2
			{
				title = "Movement Resets";
				type = 11;
				enum = "noyes";
			}
		}
	}

	elevator
	{
		title = "Elevator";
		
		245
		{
			title = "Elevator Raise to Nearest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		246
		{
			title = "Elevator Raise to Activated Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
		247
		{
			title = "Elevator Lower to Nearest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Movement Speed";
			}
		}
	}
}

hexen
{
	polyobj
	{
		1	// Polyobj Start Line
		{
			arg3
			{
				title = "Set Line ID";
				type = 15;
			}
		}
		5	// Polyobj Explicit Line
		{
			arg4
			{
				title = "Set Line ID";
				type = 15;
			}
		}
	}
	plane
	{
		181
		{
			arg2
			{
				title = "Set Line ID";
				type = 15;
			}
		}
	}
	teleport
	{
		215
		{
			arg0
			{
				title = "Set Line ID";
				type = 15;
			}
		}
	}
	translucent
	{
		208
		{
			arg0
			{
				title = "Set Line ID";
				type = 15;
			}
			arg3
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Sound boundary";
					2 = "Railing";
					4 = "Block floating monsters";
					8 = "Clip mid texture";
					16 = "Wrap mid texture";
					32 = "3D mid texture";
					64 = "Check switch height";
				}
			}
		}
	}
	scroll
	{
		222
		{
			arg0
			{
				title = "Set Line ID";
				type = 15;
			}
		}
	}
}

udmf
{
	// No Line_SetIdentification in UDMF!
	line
	{
		121 = NULL;
	}
}
