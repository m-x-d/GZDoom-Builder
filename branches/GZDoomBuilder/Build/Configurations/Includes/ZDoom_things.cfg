
// NOTE: This config contains multiple structures for different games.
// Note that since the extra player starts are a GameInfo setting to
// use the games' own ednums when available, they have been moved
// out of the main branch and into Doom, Heretic, and Default.
//
// ZDoom: standard actors
// Doom: additional actors available only in Doom game mode
// Heretic: one additional actor available in Heretic game mode
// Hexen: some redefinitions to avoid conflict
// Strife: some redefinitions to avoid conflict
// Default: for other games (Harmony, Chex Quest, etc.)

zdoom
{
	include("Boom_things.cfg");

	teleports
	{
		9043
		{
			title = "Teleport (Z Height and Gravity)";
			sprite = "internal:teleport";
		}
		9044
		{
			title = "Teleport (Z Height)";
			sprite = "internal:teleport";
		}
	}

	obstacles
	{
		blocking = 2;
	}

	lights
	{
		blocking = 2;
	}
	
	decoration
	{
		9027 = "Red Particle Fountain";
		9028 = "Green Particle Fountain";
		9029 = "Blue Particle Fountain";
		9030 = "Yellow Particle Fountain";
		9031 = "Purple Particle Fountain";
		9032 = "Black Particle Fountain";
		9033 = "White Particle Fountain";
	}

	sounds
	{
		color = 7;
		arrow = 0;
		title = "Sounds";
		width = 10;
		height = 20;
		sort = 1;
		blocking = 0;
		hangs = 0;
		fixedsize = true;
		sprite = "internal:sound";
		
		1400 = "Sound Sequence 0";
		1401 = "Sound Sequence 1";
		1402 = "Sound Sequence 2";
		1403 = "Sound Sequence 3";
		1404 = "Sound Sequence 4";
		1405 = "Sound Sequence 5";
		1406 = "Sound Sequence 6";
		1407 = "Sound Sequence 7";
		1408 = "Sound Sequence 8";
		1409 = "Sound Sequence 9";
		1411
		{
			title = "Sound Sequence args[0]";
			arg0
			{
				title = "Sound sequence index";
			}
		}
		14001 = "Ambient Sound 01";
		14002 = "Ambient Sound 02";
		14003 = "Ambient Sound 03";
		14004 = "Ambient Sound 04";
		14005 = "Ambient Sound 05";
		14006 = "Ambient Sound 06";
		14007 = "Ambient Sound 07";
		14008 = "Ambient Sound 08";
		14009 = "Ambient Sound 09";
		14010 = "Ambient Sound 10";
		14011 = "Ambient Sound 11";
		14012 = "Ambient Sound 12";
		14013 = "Ambient Sound 13";
		14014 = "Ambient Sound 14";
		14015 = "Ambient Sound 15";
		14016 = "Ambient Sound 16";
		14017 = "Ambient Sound 17";
		14018 = "Ambient Sound 18";
		14019 = "Ambient Sound 19";
		14020 = "Ambient Sound 20";
		14021 = "Ambient Sound 21";
		14022 = "Ambient Sound 22";
		14023 = "Ambient Sound 23";
		14024 = "Ambient Sound 24";
		14025 = "Ambient Sound 25";
		14026 = "Ambient Sound 26";
		14027 = "Ambient Sound 27";
		14028 = "Ambient Sound 28";
		14029 = "Ambient Sound 29";
		14030 = "Ambient Sound 30";
		14031 = "Ambient Sound 31";
		14032 = "Ambient Sound 32";
		14033 = "Ambient Sound 33";
		14034 = "Ambient Sound 34";
		14035 = "Ambient Sound 35";
		14036 = "Ambient Sound 36";
		14037 = "Ambient Sound 37";
		14038 = "Ambient Sound 38";
		14039 = "Ambient Sound 39";
		14040 = "Ambient Sound 40";
		14041 = "Ambient Sound 41";
		14042 = "Ambient Sound 42";
		14043 = "Ambient Sound 43";
		14044 = "Ambient Sound 44";
		14045 = "Ambient Sound 45";
		14046 = "Ambient Sound 46";
		14047 = "Ambient Sound 47";
		14048 = "Ambient Sound 48";
		14049 = "Ambient Sound 49";
		14050 = "Ambient Sound 50";
		14051 = "Ambient Sound 51";
		14052 = "Ambient Sound 52";
		14053 = "Ambient Sound 53";
		14054 = "Ambient Sound 54";
		14055 = "Ambient Sound 55";
		14056 = "Ambient Sound 56";
		14057 = "Ambient Sound 57";
		14058 = "Ambient Sound 58";
		14059 = "Ambient Sound 59";
		14060 = "Ambient Sound 60";
		14061 = "Ambient Sound 61";
		14062 = "Ambient Sound 62";
		14063 = "Ambient Sound 63";
		14064 = "Ambient Sound 64";
		14065
		{
			title = "Ambient Sound args[0]";
			arg0
			{
				title = "Ambient sound index";
			}
		}
		14066
		{
			title = "Ambient Sound Sequence args[0]";
			arg0
			{
				title = "Sound sequence index";
			}
		}
		14101 = "Music Changer 01";
		14102 = "Music Changer 02";
		14103 = "Music Changer 03";
		14104 = "Music Changer 04";
		14105 = "Music Changer 05";
		14106 = "Music Changer 06";
		14107 = "Music Changer 07";
		14108 = "Music Changer 08";
		14109 = "Music Changer 09";
		14110 = "Music Changer 10";
		14111 = "Music Changer 11";
		14112 = "Music Changer 12";
		14113 = "Music Changer 13";
		14114 = "Music Changer 14";
		14115 = "Music Changer 15";
		14116 = "Music Changer 16";
		14117 = "Music Changer 17";
		14118 = "Music Changer 18";
		14119 = "Music Changer 19";
		14120 = "Music Changer 20";
		14121 = "Music Changer 21";
		14122 = "Music Changer 22";
		14123 = "Music Changer 23";
		14124 = "Music Changer 24";
		14125 = "Music Changer 25";
		14126 = "Music Changer 26";
		14127 = "Music Changer 27";
		14128 = "Music Changer 28";
		14129 = "Music Changer 29";
		14130 = "Music Changer 30";
		14131 = "Music Changer 31";
		14132 = "Music Changer 32";
		14133 = "Music Changer 33";
		14134 = "Music Changer 34";
		14135 = "Music Changer 35";
		14136 = "Music Changer 36";
		14137 = "Music Changer 37";
		14138 = "Music Changer 38";
		14139 = "Music Changer 39";
		14140 = "Music Changer 40";
		14141 = "Music Changer 41";
		14142 = "Music Changer 42";
		14143 = "Music Changer 43";
		14144 = "Music Changer 44";
		14145 = "Music Changer 45";
		14146 = "Music Changer 46";
		14147 = "Music Changer 47";
		14148 = "Music Changer 48";
		14149 = "Music Changer 49";
		14150 = "Music Changer 50";
		14151 = "Music Changer 51";
		14152 = "Music Changer 52";
		14153 = "Music Changer 53";
		14154 = "Music Changer 54";
		14155 = "Music Changer 55";
		14156 = "Music Changer 56";
		14157 = "Music Changer 57";
		14158 = "Music Changer 58";
		14159 = "Music Changer 59";
		14160 = "Music Changer 60";
		14161 = "Music Changer 61";
		14162 = "Music Changer 62";
		14163 = "Music Changer 63";
		14164 = "Music Changer 64";
		14165
		{
			title = "Music Changer args[0]";
			arg0
			{
				title = "MUSINFO track index";
			}
			arg1
			{
				title = "MOD track order";
			}
		}
		9048
		{
			title = "Sound Environment (reverbs)";
			arg0
			{
				title = "ID (first part)";
			}
			arg1
			{
				title = "ID (second part)";
			}
		}
	}

	monsters
	{
		888
		{
			title = "MBF Helper dog";
			width = 12;
			height = 28;
			sprite = "internal:dog";
		}
	}

	bridges
	{
		color = 8;	// Grey
		arrow = 0;
		title = "Bridges";
		width = 16;
		sort = 1;
		height = 1;
		hangs = 0;
		blocking = 0;
		error = 1;
		sprite = "internal:bridge";
		
		5064  
		{
			title = "Bridge Invis, radius 16";
			width = 16;
		}
		5061
		{
			title = "Bridge Invis, radius 32";
			width = 32;
		}
		5065
		{
			title = "Bridge Invis, radius 8";
			width = 8;
		}
		9990
		{
			title = "Bridge Invis, custom radius";
			arg0
			{
				title = "Radius";
			}
			arg1
			{
				title = "Thickness";
			}
		}
		9991
		{
			title = "Bridge Custom";
			arg0
			{
				title = "Radius";
			}
			arg1
			{
				title = "Thickness";
			}
			arg2
			{
				title = "Orb amount";
			}
			arg3
			{
				title = "Rotation speed";
			}
			arg4
			{
				title = "Rotation radius";
			}
		}
	}
	cameras
	{
		color = 7;	// Light Grey
		arrow = 1;
		title = "Cameras and Interpolation";
		width = 0;
		height = 0;
		sort = 1;
		hangs = 0;
		blocking = 0;
		error = 1;
		fixedsize = true;
		sprite = "internal:camera";
		
		9025
		{
			title = "Security Camera";
			arg0
			{
				title = "Pitch";
			}
			arg1
			{
				title = "Max. yaw per second";
			}
			arg2
			{
				title = "Time (in otics)";
			}
		}
		9073
		{
			title = "Aiming Camera";
			arg0
			{
				title = "Pitch";
			}
			arg1
			{
				title = "Max. yaw per second";
			}
			arg2
			{
				title = "Max. pitch per second";
			}
			arg3
			{
				title = "Target Thing Tag";
				type = 14;
			}
		}
		9080
		{
			title = "Skybox Viewpoint";
			sprite = "internal:SkyboxViewpoint";
		}
		9081
		{
			title = "Skybox Picker";
			sprite = "internal:SkyboxPicker";
			arg0
			{
				title = "Target Thing Tag";
				type = 14;
			}
			arg1
			{
				title = "Mode";
				type = 11;
				enum
				{
					0 = "Apply on Floor and Ceiling";
					1 = "Apply on Ceiling";
					2 = "Apply on Floor";
				}
			}
		}
		9074
		{
			title = "Actor Mover";
			sprite = "internal:actormover";
			arg0
			{
				title = "Interp. Point Tag";
			}
			arg1
			{
				title = "Interp. Point HiTag";
			}
			arg2
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Linear path";
					2 = "Use point angle";
					4 = "Use point pitch";
					8 = "Face thing/movement direction";
					128 = "Nonsolid";
				}
			}
			arg3
			{
				title = "Target Thing Tag";
				type = 14;
			}
		}
		9070
		{
			title = "Interpolation Point";
			sprite = "internal:InterpolationPoint";
			arg0
			{
				title = "Pitch";
			}
			arg1
			{
				title = "Travel Time (otics)";
			}
			arg2
			{
				title = "Hold Time (otics)";
			}
			arg3
			{
				title = "Next Point Tag";
			}
			arg4
			{
				title = "Next Point HiTag";
			}
		}
		9075
		{
			title = "Interpolation Special";
			sprite = "internal:InterpolationSpecial";
		}
		9072
		{
			title = "Moving Camera";
			arg0
			{
				title = "Interp. Point Tag";
			}
			arg1
			{
				title = "Interp. Point HiTag";
			}
			arg2
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Linear path";
					2 = "Use point angle";
					4 = "Use point pitch";
					8 = "Face movement direction";
					128 = "Everyone";
				}
			}
			arg3
			{
				title = "Target Thing Tag";
				type = 14;
			}
		}
		9071
		{
			title = "Path Follower";
			sprite = "internal:PathFollower";
			arg0
			{
				title = "Interp. Point Tag";
			}
			arg1
			{
				title = "Interp. Point HiTag";
			}
			arg2
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Linear path";
					2 = "Use point angle";
					4 = "Use point pitch";
					8 = "Face movement direction";
				}
			}
		}
		9047 = "Patrol Special";
	}

	sectors
	{
		color = 7;
		arrow = 0;
		title = "Sector Actions";
		sort = 1;
		width = 10;
		height = 20;
		hangs = 0;
		blocking = 0;
		fixedsize = true;
		sprite = "internal:action";
		
		9082
        { 
          title = "Silent Sector";
          sprite = "internal:SilentSector";
        }
		9998 = "Actor enters sector";
		9989 = "Actor hits fake floor";
		9996 = "Actor hits ceiling";
		9999 = "Actor hits floor";
		9997 = "Actor leaves sector";
		9982 = "Eyes above fake ceiling";
		9992 = "Eyes above fake floor";
		9983 = "Eyes below fake ceiling";
		9993 = "Eyes below fake floor";
		9995 = "Player uses sector";
		9994 = "Player uses wall";
		9038
		{
			title = "ColorSetter";
			arg0
			{
				title = "Red";
				default = 255;
			}
			arg1
			{
				title = "Green";
        default = 255;
			}
			arg2
			{
				title = "Blue";
				default = 255;
			}
			arg3
			{
				title = "Desaturation";
			}
		}
		9039
		{
			title = "FadeSetter";
			arg0
			{
				title = "Red";
				default = 128;
			}
			arg1
			{
				title = "Green";
				default = 128;
			}
			arg2
			{
				title = "Blue";
				default = 128;
			}
		}
		9041
		{
			title = "FlagSetter";
			arg0
			{
				title = "Set Flags";
				type = 12;
				enum = "sector_flags";
			}
		}
	}

	slopes
	{
		color = 8;	// Grey
		arrow = 0;
		title = "Slopes";
		width = 0;
		sort = 1;
		height = 0;
		hangs = 0;
		blocking = 0;
		fixedsize = true;
		sprite = "internal:slope";
		
		9511
		{
			title = "Copy ceiling plane";
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		9510
		{
			title = "Copy floor plane";
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		9503
		{
			title = "Set ceiling slope";
			arrow = 1;
			arg0
			{
				title = "Z-Angle";
				default = 90;
			}
		}
		9502
		{
			title = "Set floor slope";
			arrow = 1;
			arg0
			{
				title = "Z-Angle";
				default = 90;
			}
		}
		9501
		{
			title = "Slope ceiling to here";
			height = 8;
			arg0
			{
				title = "Line";
				type = 15;
			}
		}
		9500
		{
			title = "Slope floor to here";
			height = 4;
			arg0
			{
				title = "Line";
				type = 15;
			}
		}
		
		1500
		{
			title = "Line slope floor";
			height = 8;
		}
		
		1501
		{
			title = "Line slope ceiling";
			height = 8;
		}
		
		1504
		{
			title = "Vertex slope floor";
			height = 8;
			absolutez = true;
		}
		
		1505
		{
			title = "Vertex slope ceiling";
			height = 8;
			absolutez = true;
		}
	}

	zdoom
	{
		color = 7;	// Light Grey
		arrow = 1;
		title = "ZDoom";
		sort = 1;
		width = 10;
		height = 20;
		hangs = 0;
		blocking = 0;
		fixedsize = true;
		sprite = "internal:arrow";
		
		9200
		{
			title = "Decal";
			sprite = "internal:Decal";
			arg0
			{
				title = "Decal ID";
			}
		}
		9024
		{
			title = "Path Node";
			sprite = "internal:PathFollower";
			arg0
			{
				title = "Next Node";
				type = 14;
			}
			arg1
			{
				title = "Delay";
			}
		}
		9026
		{
			title = "Spark";
			sprite = "internal:Sparkle";
			arg0
			{
				title = "Particles Amount";
			}
		}
		9040 = "Map Marker";
		9045
		{
			title = "Deep Water";
			sprite = "internal:DeepWater";
		}
		9046
		{
			title = "Secret";
			sprite = "internal:Secret";
			arg0
			{
				title = "Mode";
				type = 11;
				enum
				{
					0 = "Message And Sound";
					1 = "Message Only";
					2 = "Sound Only";
					3 = "No Message And Sound";
				} 
			}
		}
		9300
		{
			title = "Polyobject Anchor";
			sprite = "internal:anchor";
			fixedrotation = true;
		} 
		9301{
			title = "Polyobject Start Spot";
			sprite = "internal:anchor";
			fixedrotation = true;
		}
		9302
		{
			title = "Polyobject Start Spot (crush)";
			sprite = "internal:anchor";
			fixedrotation = true;
		} 
		9303
		{
			title = "Polyobject Start Spot (hurts to touch)";
			sprite = "internal:anchor";
			fixedrotation = true;
		}
		9001
		{
			title = "Map Spot";
			sprite = "internal:MapSpot";
		}
		9013
		{
			title = "Map Spot (gravity)";
			sprite = "internal:MapSpotGravity";
		}
		9076
		{
			title = "Hate target";
			sprite = "internal:Target";
		}
		9988
		{
			title = "Custom Sprite";
			arg0
			{
				title = "BTILxxxx";
			}
			arg1
			{
				title = "BTILxxxx";
			}
			arg2
			{
				title = "X Scale (64=100%)";
				default = 64;
			}
			arg3
			{
				title = "Y Scale (64=100%) ";
				default = 64;
			}
			arg4
			{
				title = "Flags";
				type = 11;
				enum
				{
					0 = "Opaque";
					2 = "Alpha 33%";
					3 = "Alpha 66%";
					4 = "Flip horizontally";
					5 = "Flip vertically";
				}
			}
		}
	}

	portals
	{
		color = 7;
		arrow = 0;
		title = "Portals";
		width = 0;
		sort = 1;
		height = 0;
		hangs = 0;
		blocking = 0;
		fixedsize = true;
		
		9077
		{
			title = "Upper Sector";
			sprite = "internal:portal_upper";
			arg0
			{
				title = "Flat Transparency";
				default = 128;
			}
		}
		
		9078
		{
			title = "Lower Sector";
			sprite = "internal:portal_lower";
			arg0
			{
				title = "Flat Transparency";
				default = 128;
			}
		}
	}
}


doom
{
	players
	{
		blocking = 2;
		4001
		{
			title = "Player 5 start";
			sprite = "PLAYA2A8";
		}
		4002
		{
			title = "Player 6 start";
			sprite = "PLAYA2A8";
		}
		4003
		{
			title = "Player 7 start";
			sprite = "PLAYA2A8";
		}
		4004
		{
			title = "Player 8 start";
			sprite = "PLAYA2A8";
		}
	}

	monsters
	{
		blocking = 2;
		
		9037
		{
			title = "PR Lost Soul (BETA)";
			width = "16";
			height = "56";
			sprite = "SKULA1";
		}
		
		9050
		{
			title = "Arachnotron (stealth)";
			width = 64;
			height = 64;
			sprite = "BSPIA2A8";
		}
		9051
		{
			title = "Archvile (stealth)";
			width = 20;
			sprite = "VILEA2D8";
		}
		9052
		{
			title = "Baron of Hell (stealth)";
			width = 24;
			height = 64;
			sprite = "BOSSA2A8";
		}
		9053
		{
			title = "Cacodemon (stealth)";
			width = 31;
			sprite = "HEADA2A8";
		}
		9054
		{
			title = "Chaingunner (stealth)";
			sprite = "CPOSA2";
		}
		9055
		{
			title = "Demon (stealth)";
			width = 30;
			sprite = "SARGA2A8";
		}
		9056
		{
			title = "Hell Knight (stealth)";
			width = 24;
			height = 64;
			sprite = "BOS2A2C8";
		}
		9057
		{
			title = "Imp (stealth)";
			sprite = "TROOA2A8";
		}
		9058
		{
			title = "Mancubus (stealth)";
			width = 48;
			height = 64;
			sprite = "FATTC2C8";
		}
		9059
		{
			title = "Revenant (stealth)";
			sprite = "SKELA2D8";
		}
		9060
		{
			title = "Former Sergeant (stealth)";
			sprite = "SPOSA2A8";
		}
		9061
		{
			title = "Former Human (stealth)";
			sprite = "POSSA2A8";
		}
	}

	decoration
	{
		49	// Hanging victim, twitching (blocking)
		{
			blocking = 2;
		}
		
		50	// Hanging victim, arms out (blocking)
		{
			blocking = 2;
		}

		51	// Hanging victim, 1-legged (blocking)
		{
			blocking = 2;
		}
		
		52	// Hanging pair of legs (blocking)
		{
			blocking = 2;
		}

		53	// Hanging leg (blocking)
		{
			blocking = 2;
		}
		
		25	// Impaled human
		{
			blocking = 2;
		}
		
		26	// Twitching impaled human
		{
			blocking = 2;
		}
		
		27	// Skull on a pole
		{
			blocking = 2;
		}
		
		28	// 5 skulls shish kebob
		{
			blocking = 2;
		}
		
		29	// Pile of skulls and candles
		{
			blocking = 2;
		}
		
		73	// Hanging victim, guts removed
		{
			blocking = 2;
		}
		
		74	// Hanging victim, guts and brain removed
		{
			blocking = 2;
		}
		
		75	// Hanging torso, looking down
		{
			blocking = 2;
		}
		
		76	// Hanging torso, open skull
		{
			blocking = 2;
		}
		
		77	// Hanging torso, looking up
		{
			blocking = 2;
		}
		
		78	// Hanging torso, brain removed
		{
			blocking = 2;
		}
		
		5050 // Stalagmite
		{
			blocking = 2;
			title = "Stalagmite";
			sprite = "SMT2A0";
			width = 16;
			height = 48;
		}
	}
	
	weapons
	{
		5010
		{
			title = "Pistol";
			sprite = "PISGA0";
		}
	}
	
	powerups
	{
		2016 = "Evil Sceptre (BETA)";
		2017 = "Unholy Bible (BETA)";
	}
	
	bridges
	{
		118
		{
			title = "Hack Bridge";
			width = "36";
			height = "4";
		}
	}

	marine
	{
		color = 15;
		arrow = 1;
		title = "Marines";
		width = 16;
		sort = 1;
		height = 56;
		hangs = 0;
		blocking = 0;
		sprite = "PLAYA2A8";
		
		9100 = "Scripted Marine";
		9101 = "Marine Fist"; 
		9102 = "Marine Berserk"; 
		9103 = "Marine Chainsaw"; 
		9104 = "Marine Pistol"; 
		9105 = "Marine Shotgun"; 
		9106 = "Marine SSG"; 
		9107 = "Marine Chaingun"; 
		9108 = "Marine Rocket Launcher"; 
		9109 = "Marine Plasma Rifle"; 
		9110 = "Marine Railgun"; 
		9111 = "Marine BFG9000";
	}
}

heretic
{
	players
	{
		blocking = 2;
		4001
		{
			title = "Player 5 start";
			sprite = "PLAYA2A8";
		}
		4002
		{
			title = "Player 6 start";
			sprite = "PLAYA2A8";
		}
		4003
		{
			title = "Player 7 start";
			sprite = "PLAYA2A8";
		}
		4004
		{
			title = "Player 8 start";
			sprite = "PLAYA2A8";
		}
	}

	bridges
	{
		118
		{
			title = "Glitter Bridge";
			width = "32";
			height = "2";
		}
	}
}

hexen
{
	other
	{
		// This solves conflict
		9001 = null;	// Map Spot
		9013 = null;	// Map Spot (Gravity)
		// We'll want to use ZDoom's own polyobject numbers
		3000 = null;	// Polyobject Anchor
		3001 = null;	// Polyobject Start Spot
		3002 = null;	// Polyobject Start Spot (crush)
	}
}

strife
{
	// These are useless and not supported in ZDoom
	hints
	{
		title = "Explosives";
		9001 = null;	// Label Hint 1
		9002 = null;	// Label Hint 2
		9003 = null;	// Label Hint 3
		9004 = null;	// Label Hint 4
		9005 = null;	// Label Hint 5
		9006 = null;	// Label Hint 6
	}

	pillars
	{
		blocking = 2;
	}
}

default
{
	players
	{
		blocking = 2;
		4001
		{
			title = "Player 5 start";
			sprite = "PLAYA2A8";
		}
		4002
		{
			title = "Player 6 start";
			sprite = "PLAYA2A8";
		}
		4003
		{
			title = "Player 7 start";
			sprite = "PLAYA2A8";
		}
		4004
		{
			title = "Player 8 start";
			sprite = "PLAYA2A8";
		}
	}

}