/*************************************************************\
	Doom Builder Game Configuration for (Hexen format)
\*************************************************************/

// This is required to prevent accedential use of a different configuration
type = "Doom Builder 2 Game Configuration";

// This is the title to show for this game
game = "ZDoom (Heretic in Hexen format)";

// This is the simplified game engine/sourceport name
engine = "zdoom";

// The format interface handles the map data format
formatinterface = "HexenMapSetIO";

// Default lump name for new map
defaultlumpname = "E1M1";

// Default testing parameters
testparameters = "-iwad \"%WP\" -skill \"%S\" -file \"%AP\" \"%F\" +map %L %NM";

// Default nodebuilder configurations
defaultsavecompiler = "zdbsp_normal";
defaulttestcompiler = "zdbsp_fast";

// Decorate actors to include depending on actor game property
decorategames = "heretic raven";

// Skill levels
skills
{
	1 = "Thou needeth a wet-nurse";
	2 = "Yellowbellies-r-us";
	3 = "Bringest them oneth";
	4 = "Thou art a smite-meister";
	5 = "Black plague possesses thee";
}

// When this is set to true, sectors with the same tag will light up when a line is highlighted
linetagindicatesectors = false;

// Special linedefs
soundlinedefflag = 64;	// See linedefflags
singlesidedflag = 1;	// See linedefflags
doublesidedflag = 4;	// See linedefflags
impassableflag = 1;
upperunpeggedflag = 8;
lowerunpeggedflag = 16;

// Door making
makedoortrack = "DOORTRAK";
makedooraction = 202;			// See linedeftypes
makedoorarg0 = 0;
makedoorarg1 = 16;
makedoorarg2 = 0;
makedoorarg3 = 3;
makedoorarg4 = 0;

// Generalized actions
generalizedlinedefs = false;
generalizedsectors = true;

// Texture loading options
mixtexturesflats = true;
defaulttexturescale = 1.0f;
defaultflatscale = 1.0f;

// Thing number for start position in 3D Mode
start3dmode = 32000;

// Default flags for first new thing
defaultthingflags
{
	1;
	2;
	4;
	32;
	64;
	128;
	256;
	512;
}


/*
TEXTURES AND FLAT SOURCES
This tells Doom Builder where to find the information for textures
and flats in the IWAD file, Addition WAD file and Map WAD file.

Start and end lumps must be given in a structure (of which the
key name doesnt matter) and any textures or flats in between them
are loaded in either the textures category or flats category.

For textures: PNAMES, TEXTURE1 and TEXTURE2 are loaded by default.
*/

// Texture sources
textures
{
	zdoom1
	{
		start = "TX_START";
		end = "TX_END";
	}
}

// Patch sources
patches
{
	standard1
	{
		start = "P_START";
		end = "P_END";
	}
	
	standard2
	{
		start = "PP_START";
		end = "PP_END";
	}
}

// Sprite sources
sprites
{
	standard1
	{
		start = "S_START";
		end = "S_END";
	}
	
	standard2
	{
		start = "SS_START";
		end = "SS_END";
	}
}

// Flat sources
flats
{
	standard1
	{
		start = "F_START";
		end = "F_END";
	}
	
	standard2
	{
		start = "FF_START";
		end = "FF_END";
	}
	
	standard3
	{
		start = "FF_START";
		end = "F_END";
	}
	
	standard4
	{
		start = "F_START";
		end = "FF_END";
	}
}


/*
GAME DETECT PATTERN
Used to guess the game for which a WAD file is made.

1 = One of these lumps must exist
2 = None of these lumps must exist
3 = All of these lumps must exist
*/

gamedetect
{
	TEXTMAP = 2;
	ENDMAP = 2;
	EXTENDED = 2;
	BEHAVIOR = 3;
     E1M1 = 1; E1M2 = 1; E1M3 = 1; E1M4 = 1; E1M5 = 1; E1M6 = 1; E1M7 = 1; E1M8 = 1; E1M9 = 1;
	E2M1 = 1; E2M2 = 1; E2M3 = 1; E2M4 = 1; E2M5 = 1; E2M6 = 1; E2M7 = 1; E2M8 = 1; E2M9 = 1;
	E3M1 = 1; E3M2 = 1; E3M3 = 1; E3M4 = 1; E3M5 = 1; E3M6 = 1; E3M7 = 1; E3M8 = 1; E3M9 = 1;
	E4M1 = 1; E4M2 = 1; E4M3 = 1; E4M4 = 1; E4M5 = 1; E4M6 = 1; E4M7 = 1; E4M8 = 1; E4M9 = 1;
	MAP01 = 2; MAP02 = 2; MAP03 = 2; MAP04 = 2; MAP05 = 2; MAP06 = 2; MAP07 = 2; MAP08 = 2; MAP09 = 2; MAP10 = 2;
	MAP11 = 2; MAP12 = 2; MAP13 = 2; MAP14 = 2; MAP15 = 2; MAP16 = 2; MAP17 = 2; MAP18 = 2; MAP19 = 2; MAP20 = 2;
	MAP21 = 2; MAP22 = 2; MAP23 = 2; MAP24 = 2; MAP25 = 2; MAP26 = 2; MAP27 = 2; MAP28 = 2; MAP29 = 2; MAP30 = 2;
	MAP31 = 2; MAP32 = 2; MAP33 = 2; MAP34 = 2; MAP35 = 2; MAP36 = 2; MAP37 = 2; MAP38 = 2; MAP39 = 2; MAP40 = 2;
	MAP41 = 2;
}


/*
MAP LUMP NAMES
Map lumps are loaded with the map as long as they are right after each other. When the editor
meets a lump which is not defined in this list it will ignore the map if not satisfied.
The order of items defines the order in which lumps will be written to WAD file on save.
To indicate the map header lump, use ~MAP

Legenda:
required = Lump is required to exist.
blindcopy = Lump will be copied along with the map blindly. (usefull for lumps Doom Builder doesn't use)
nodebuild = The nodebuilder generates this lump.
allowempty = The nodebuilder is allowed to leave this lump empty.
script = This lump is a text-based script. Specify the filename of the script configuration to use.
*/

maplumpnames
{
	~MAP
	{
		required = true;
		blindcopy = true;
		nodebuild = false;
	}
	
	THINGS
	{
		required = true;
		nodebuild = true;
		allowempty = true;
	}
	
	LINEDEFS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	SIDEDEFS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	VERTEXES
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	SEGS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	SSECTORS
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	NODES
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	SECTORS
	{
		required = true;
		nodebuild = true;
		allowempty = false;
	}
	
	REJECT
	{
		required = false;
		nodebuild = true;
		allowempty = true;
	}
	
	BLOCKMAP
	{
		required = false;
		nodebuild = true;
		allowempty = false;
	}
	
	BEHAVIOR
	{
		required = true;
		nodebuild = false;
		blindcopy = true;
	}
	
	SCRIPTS
	{
		required = false;
		nodebuild = false;
		script = "ZDoom_ACS.cfg";
	}
}


// DEFAULT SECTOR BRIGHTNESS LEVELS
sectorbrightness
{
	255;
	248;
	240;
	232;
	224;
	216;
	208;
	200;
	192;
	184;
	176;
	168;
	160;
	152;
	144;
	136;
	128;
	120;
	112;
	104;
	96;
	88;
	80;
	72;
	64;
	56;
	48;
	40;
	32;
	24;
	16;
	8;
	0;
}

// SECTOR TYPES
sectortypes
{
	0 = "Normal";
	1 = "Light Phased";
	2 = "Light Sequence Start";
	3 = "Light Sequence Special 1";
	4 = "Light Sequence Special 2";
	21 = "Light Phased";
	22 = "Light Sequence Start";
	23 = "Light Sequence Special 1";
	24 = "Light Sequence Special 2";
	26 = "Stairs Special 1";
	27 = "Stairs Special 2";
	65 = "Light Flicker";
	66 = "Light Strobe Fast";
	67 = "Light Strobe Slow";
	68 = "Light Strobe Hurt";
	69 = "Damage Hellslime";
	71 = "Damage Nukage";
	72 = "Light Glow";
	74 = "Sector Door Close (30 sec)";
	75 = "Damage End Level";
	76 = "Light StrobeSlowSync";
	77 = "Light StrobeFastSync";
	78 = "Sector Door Raise (5 min)";
	79 = "Low Friction";
	80 = "Damage Super Hellslime";
	81 = "Light Fire Flicker";
	82 = "Damage -2 or -5% health (no protection)";
	83 = "Damage -4 or -8% health (no protection)";
	84 = "Scroll east + -2 or -5% health (no protection)";
	87 = "Sector uses outside fog";
	105 = "Delayed damage weak";
	115 = "Instant death";
	116 = "Delayed damage strong";
	118 = "Carry player by tag";
	196 = "Healing Sector";
	197 = "Lightning Outdoor";
	198 = "Lightning Indoor 2";
	199 = "Lightning Indoor 1";
	200 = "Sky 2 (MAPINFO)";
	201 = "Scroll North (slow)";
	202 = "Scroll North (medium)";
	203 = "Scroll North (fast)";
	204 = "Scroll East (slow)";
	205 = "Scroll East (medium)";
	206 = "Scroll East (fast)";
	207 = "Scroll South (slow)";
	208 = "Scroll South (medium)";
	209 = "Scroll South (fast)";
	210 = "Scroll West (slow)";
	211 = "Scroll West (medium)";
	212 = "Scroll West (fast)";
	213 = "Scroll NorthWest (slow)";
	214 = "Scroll NorthWest (medium)";
	215 = "Scroll NorthWest (fast)";
	216 = "Scroll NorthEast (slow)";
	217 = "Scroll NorthEast (medium)";
	218 = "Scroll NorthEast (fast)";
	219 = "Scroll SouthEast (slow)";
	220 = "Scroll SouthEast (medium)";
	221 = "Scroll SouthEast (fast)";
	222 = "Scroll SouthWest (slow)";
	223 = "Scroll SouthWest (medium)";
	224 = "Scroll SouthWest (fast)";
	40 = "Wind East weak";
	41 = "Wind East medium";
	42 = "Wind East strong";
	43 = "Wind North weak";
	44 = "Wind North medium";
	45 = "Wind North strong";
	46 = "Wind South weak";
	47 = "Wind South medium";
	48 = "Wind South strong";
	49 = "Wind West weak";
	50 = "Wind West medium";
	51 = "Wind West strong";
	225 = "Carry East Slow";
	226 = "Carry East Med.Slow";
	227 = "Carry East Medium";
	228 = "Carry East Med.Fast";
	229 = "Carry East Fast";
	230 = "Carry North Slow";
	231 = "Carry North Med.Slow";
	232 = "Carry North Medium";
	233 = "Carry North Med.Fast";
	234 = "Carry North Fast";
	235 = "Carry South Slow";
	236 = "Carry South Med.Slow";
	237 = "Carry South Medium";
	238 = "Carry South Med.Fast";
	239 = "Carry South Fast";
	240 = "Carry West Slow";
	241 = "Carry West Med.Slow";
	242 = "Carry West Medium";
	243 = "Carry West Med.Fast";
	244 = "Carry West Fast";
}

// GENERALIZED SECTOR TYPES
gen_sectortypes
{
	effect
	{
		0 = "Normal";
		1 = "Light Phased";
		2 = "Light Sequence Start";
		3 = "Light Sequence Special 1";
		4 = "Light Sequence Special 2";
		21 = "Light Phased";
		22 = "Light Sequence Start";
		23 = "Light Sequence Special 1";
		24 = "Light Sequence Special 2";
		26 = "Stairs Special 1";
		27 = "Stairs Special 2";
		65 = "Light Flicker";
		66 = "Light Strobe Fast";
		67 = "Light Strobe Slow";
		68 = "Light Strobe Hurt";
		69 = "Damage Hellslime";
		71 = "Damage Nukage";
		72 = "Light Glow";
		74 = "Sector Door Close (30 sec)";
		75 = "Damage End Level";
		76 = "Light StrobeSlowSync";
		77 = "Light StrobeFastSync";
		78 = "Sector Door Raise (5 min)";
		79 = "Low Friction";
		80 = "Damage Super Hellslime";
		81 = "Light Fire Flicker";
		82 = "Damage -2 or -5% health (no protection)";
		83 = "Damage -4 or -8% health (no protection)";
		84 = "Scroll east + -2 or -5% health (no protection)";
		87 = "Sector uses outside fog";
		105 = "Delayed damage weak";
		115 = "Instant death (doesn't work in 2.0.93 yet!)";
		116 = "Delayed damage strong";
		118 = "Carry player by tag";
		196 = "Healing Sector";
		197 = "Lightning Outdoor";
		198 = "Lightning Indoor 2";
		199 = "Lightning Indoor 1";
		200 = "Sky 2 (MAPINFO)";
		201 = "Scroll North (slow)";
		202 = "Scroll North (medium)";
		203 = "Scroll North (fast)";
		204 = "Scroll East (slow)";
		205 = "Scroll East (medium)";
		206 = "Scroll East (fast)";
		207 = "Scroll South (slow)";
		208 = "Scroll South (medium)";
		209 = "Scroll South (fast)";
		210 = "Scroll West (slow)";
		211 = "Scroll West (medium)";
		212 = "Scroll West (fast)";
		213 = "Scroll NorthWest (slow)";
		214 = "Scroll NorthWest (medium)";
		215 = "Scroll NorthWest (fast)";
		216 = "Scroll NorthEast (slow)";
		217 = "Scroll NorthEast (medium)";
		218 = "Scroll NorthEast (fast)";
		219 = "Scroll SouthEast (slow)";
		220 = "Scroll SouthEast (medium)";
		221 = "Scroll SouthEast (fast)";
		222 = "Scroll SouthWest (slow)";
		223 = "Scroll SouthWest (medium)";
		224 = "Scroll SouthWest (fast)";
		40 = "Wind East weak";
		41 = "Wind East medium";
		42 = "Wind East strong";
		43 = "Wind North weak";
		44 = "Wind North medium";
		45 = "Wind North strong";
		46 = "Wind South weak";
		47 = "Wind South medium";
		48 = "Wind South strong";
		49 = "Wind West weak";
		50 = "Wind West medium";
		51 = "Wind West strong";
		225 = "Carry East Slow";
		226 = "Carry East Med.Slow";
		227 = "Carry East Medium";
		228 = "Carry East Med.Fast";
		229 = "Carry East Fast";
		230 = "Carry North Slow";
		231 = "Carry North Med.Slow";
		232 = "Carry North Medium";
		233 = "Carry North Med.Fast";
		234 = "Carry North Fast";
		235 = "Carry South Slow";
		236 = "Carry South Med.Slow";
		237 = "Carry South Medium";
		238 = "Carry South Med.Fast";
		239 = "Carry South Fast";
		240 = "Carry West Slow";
		241 = "Carry West Med.Slow";
		242 = "Carry West Medium";
		243 = "Carry West Med.Fast";
		244 = "Carry West Fast";
	}
	
	damage
	{
		0 = "None";
		256 = "Damage 5 per second";
		512 = "Damage 10 per second";
		768 = "Damage 20 per second";
	}
	
	secret
	{
		0 = "No";
		1024 = "Yes";
	}
	
	friction
	{
		0 = "Disabled";
		2048 = "Enabled";
	}
	
	pusher
	{
		0 = "Disabled";
		4096 = "Enabled";
	}
}

// LINEDEF FLAGS
linedefflags
{
	1 = "Impassable";
	2 = "Block Monster";
	4 = "Double Sided";
	8 = "Upper Unpegged";
	16 = "Lower Unpegged";
	32 = "Secret";
	64 = "Block Sound";
	128 = "Hidden";
	256 = "Shown";
	512 = "Repeatable Action";
	8192 = "Monster Activates";
	16384 = "Block Players";
	32768 = "Block Everything";
}

// Activations filter for Hexen type activations
// This filters the activation bits from the flags
linedefactivationsfilter = 7168;

// LINEDEF ACTIVATIONS
// Make sure these are in order from lowest value to highest value
linedefactivations
{
	0 = "Player walks over";
	1024 = "Player presses Use";
	2048 = "Monster walks over";
	3072 = "Projectile hits";
	4096 = "Player bumps";
	5120 = "Projectile flies over";
	6144 = "Player presses Use (PassThru)";
}

// Linedef flags UDMF translation table
// This is needed for copy/paste and prefabs to work properly
// When the UDMF field name is prefixed with ! it is inverted
linedefflagstranslation
{
	1 = "blocking";
	2 = "blockmonsters";
	4 = "twosided";
	8 = "dontpegtop";
	16 = "dontpegbottom";
	32 = "secret";
	64 = "blocksound";
	128 = "dontdraw";
	256 = "mapped";
	512 = "repeatspecial";
	1024 = "playeruse";
	2048 = "monstercross";
	3072 = "impact";
	4096 = "playerpush";
	5120 = "missilecross";
	6144 = "passuse";
	8192 = "monsteractivate";
	16384 = "blockplayers";
	32768 = "blockeverything";
}

// LINEDEF TYPES
linedeftypes
{
	
	misc
	{
		
		0
		{
			title = "None";
		}
	}
	
	
	polyobj
	{
		title = "Polyobj";
		
		1
		{
			title = "Polyobj Start Line";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Mirror Polyobj Number";
			}
			
			arg2
			{
				title = "Sound Number";
			}
		}
		
		2
		{
			title = "Polyobj Rotate Left";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Target Angle";
			}
		}
		
		3
		{
			title = "Polyobj Rotate Right";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Target Angle";
			}
		}
		
		4
		{
			title = "Polyobj Move";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Angle";
			}
			
			arg3
			{
				title = "Movement Length";
			}
		}
		
		5
		{
			title = "Polyobj Explicit Line";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Rendering order";
			}
			
			arg2
			{
				title = "Mirror Polyobj Number";
			}
			
			arg3
			{
				title = "Sound Number";
			}
		}
		
		6
		{
			title = "Polyobj Move (8px)";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Angle";
			}
			
			arg3
			{
				title = "Movement Length (8px)";
			}
		}
		
		7
		{
			title = "Polyobj Door Swing";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Angle";
			}
			
			arg3
			{
				title = "Delay";
			}
		}
		
		8
		{
			title = "Polyobj Door Slide";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Angle";
			}
			
			arg3
			{
				title = "Movement Length";
			}
			
			arg4
			{
				title = "Delay";
			}
		}
		
		90
		{
			title = "Polyobj Rotate Left (override)";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Target Angle";
			}
		}
		
		91
		{
			title = "Polyobj Rotate Right (override)";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Target Angle";
			}
		}
		
		92
		{
			title = "Polyobj Move (override)";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Angle";
			}
			
			arg3
			{
				title = "Movement Length";
			}
		}
		
		93
		{
			title = "Polyobj Move (8px, override)";
			
			arg0
			{
				title = "Polyobj Number";
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Angle";
			}
			
			arg3
			{
				title = "Movement Length (8px)";
			}
		}
	}
	
	
	line
	{
		title = "Line";
		
		9
		{
			title = "Line Horizon";
		}
		
		121
		{
			title = "Line Identification";
			
			arg0
			{
				title = "Set Line ID";
			}
		}
		
		182
		{
			title = "Line Mirror";
		}
	}
	
	
	door
	{
		title = "Door";
		
		10
		{
			title = "Door Close";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Light Tag";
				type = 13;
			}
		}
		
		11
		{
			title = "Door Open";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Light Tag";
				type = 13;
			}
		}
		
		12
		{
			title = "Door Raise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Close Delay";
			}
			
			arg3
			{
				title = "Light Tag";
				type = 13;
			}
		}
		
		13
		{
			title = "Door Locked Raise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Close Delay";
			}
			
			arg3
			{
				title = "Key Number";
				type = 11;
				enum = "keys";
			}
			
			arg4
			{
				title = "Light Tag";
				type = 13;
			}
		}
		
		14
		{
			title = "Door Animated";
			
			arg0
			{
				title = "Sector tag";
				type = 13;
			}
			
			arg1
			{
				title = "Animation Speed";
			}
			
			arg2
			{
				title = "Close Delay";
			}
		}
		
		202
		{
			title = "Door Generic";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Type";
				type = 11;
				enum = "generic_door_types";
			}
			
			arg3
			{
				title = "Delay";
			}
			
			arg4
			{
				title = "Lock";
				type = 11;
				enum = "keys";
			}
		}
		
		249
		{
			title = "Door Close Wait Open";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Delay";
			}
			
			arg3
			{
				title = "Light Tag";
				type = 13;
			}
		}
	}
	
	
	autosave
	{
		title = "Autosave";
		
		15
		{
			title = "Autosave";
		}
	}
	
	
	floor
	{
		title = "Floor";
		
		20
		{
			title = "Floor Lower";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		21
		{
			title = "Floor Lower to Lowest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		22
		{
			title = "Floor Lower to Nearest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		23
		{
			title = "Floor Raise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		24
		{
			title = "Floor Raise to Highest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		25
		{
			title = "Floor Raise to Nearest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		28
		{
			title = "Floor Crusher Start";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Crush Damage";
			}

			arg3
			{
				title = "Crush Mode";
			}
		}
		
		35
		{
			title = "Floor Raise (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		
		36
		{
			title = "Floor Lower (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		
		46
		{
			title = "Floor Crusher Stop";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		66
		{
			title = "Floor Lower Instantly (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg2
			{
				title = "Target Height (8px)";
			}
		}
		
		67
		{
			title = "Floor Raise Instantly (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg2
			{
				title = "Target Height (8px)";
			}
		}
		
		68
		{
			title = "Floor Move (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Target Height (8px)";
			}
			
			arg3
			{
				title = "Negative Height";
				type = 11;
				enum = "noyes";
			}
		}
		
		37
		{
			title = "Floor Move";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Target Height";
			}
			
			arg3
			{
				title = "Negative Height";
				type = 11;
				enum = "noyes";
			}
		}
		
		95
		{
			title = "Floor and Ceiling Lower";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		96
		{
			title = "Floor and Ceiling Raise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		138
		{
			title = "Floor Waggle";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Amplitude";
			}
			
			arg2
			{
				title = "Frequency";
			}
			
			arg3
			{
				title = "Phase Offset";
			}
			
			arg4
			{
				title = "Duration";
			}
		}
		
		200
		{
			title = "Floor Generic Change";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
			
			arg3
			{
				title = "Target";
				type = 11;
				enum = "generic_floor_target";
			}
			
			arg4
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Remove effect";
					2 = "Change texture";
					3 = "Change special";
					4 = "Numeric model";
					8 = "Raise";
					16 = "Crusher";
				}
			}
		}
		
		235
		{
			title = "Floor Transfer Trigger";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		236
		{
			title = "Floor Transfer Numeric";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		238
		{
			title = "Floor Raise to Lowest Ceiling";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		239
		{
			title = "Floor Raise by TxTy";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		240
		{
			title = "Floor Raise by Texture";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		241
		{
			title = "Floor Lower to Lowest TxTy";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		242
		{
			title = "Floor Lower to Highest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Adjust Target Height";
			}
		}
		
		250
		{
			title = "Floor Donut";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Pillar Movement Speed";
			}
			
			arg2
			{
				title = "Stairs Movement Speed";
			}
		}
		
		251
		{
			title = "Floor and Ceiling Lower and Raise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Floor Movement Speed";
			}
			
			arg2
			{
				title = "Ceiling Movement Speed";
			}
		}
	}
	
	
	stairs
	{
		title = "Stairs";
		
		26
		{
			title = "Stairs Build Down";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Step Amount";
			}
			
			arg3
			{
				title = "Build Step Delay";
			}
			
			arg4
			{
				title = "Reset Delay";
			}
		}
		
		27
		{
			title = "Stairs Build Up";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Step Amount";
			}
			
			arg3
			{
				title = "Build Step Delay";
			}
			
			arg4
			{
				title = "Reset Delay";
			}
		}
		
		31
		{
			title = "Stairs Build Down (sync)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Step Amount";
			}
			
			arg3
			{
				title = "Reset Delay";
			}
		}
		
		32
		{
			title = "Stairs Build Up (sync)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Step Amount";
			}
			
			arg3
			{
				title = "Reset Delay";
			}
		}
		
		204
		{
			title = "Stairs Generic Build";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Step Amount";
			}
			
			arg3
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Upwards";
					2 = "Ignore textures";
				}
			}
			
			arg4
			{
				title = "Reset Delay";
			}
		}
		
		217
		{
			title = "Stairs Build Doom";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Step Amount";
			}
			
			arg3
			{
				title = "Build Step Delay";
			}
			
			arg4
			{
				title = "Reset Delay";
			}
		}
	}
	
	
	pillar
	{
		title = "Pillar";
		
		29
		{
			title = "Pillar Build";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		30
		{
			title = "Pillar Open";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Floor Movement Amount";
			}
			
			arg3
			{
				title = "Ceiling Movement Amount";
			}
		}
		
		94
		{
			title = "Pillar Build and Crush";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}

			arg3
			{
				title = "Crush Mode";
			}
		}
	}
	
	
	forcefield
	{
		title = "Forcefield";
		
		33
		{
			title = "Forcefield Set";
		}
		
		34
		{
			title = "Forcefield Remove";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
	}
	
	
	ceiling
	{
		title = "Ceiling";
		
		38
		{
			title = "Ceiling Waggle";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Amplitude";
			}
			
			arg2
			{
				title = "Frequency";
			}
			
			arg3
			{
				title = "Phase Offset";
			}
			
			arg4
			{
				title = "Duration";
			}
		}
		
		40
		{
			title = "Ceiling Lower";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		41
		{
			title = "Ceiling Raise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		42
		{
			title = "Ceiling Crusher Start";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Crush Damage";
			}
			
			arg3
			{
				title = "Crush Mode";
			}
		}
		
		43
		{
			title = "Ceiling Crush Once";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Crush Damage";
			}
			
			arg3
			{
				title = "Crush Mode";
			}
			
		}
		
		44
		{
			title = "Ceiling Crusher Stop";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		45
		{
			title = "Ceiling Crush Once and Open";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Crush Damage";
			}
			
			arg3
			{
				title = "Crush Mode";
			}
			
		}
		
		69
		{
			title = "Ceiling Move (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount (8px)";
			}
			
			arg3
			{
				title = "Negative Height";
				type = 11;
				enum = "noyes";
			}
		}
		
		47
		{
			title = "Ceiling Move";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
			
			arg3
			{
				title = "Negative Height";
				type = 11;
				enum = "noyes";
			}
		}
		
		192
		{
			title = "Ceiling Lower to Highest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		193
		{
			title = "Ceiling Lower Instantly";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		
		194
		{
			title = "Ceiling Raise Instantly";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		
		195
		{
			title = "Ceiling Crush Once and Open A";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Crush Movement Speed";
			}
			
			arg2
			{
				title = "Raise Movement Speed";
			}
			
			arg3
			{
				title = "Crush Damage";
			}
			
			arg4
			{
				title = "Crush Mode";
			}
			
		}
		
		196
		{
			title = "Ceiling Crush Start A";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Crush Movement Speed";
			}
			
			arg2
			{
				title = "Raise Movement Speed";
			}
			
			arg3
			{
				title = "Crush Damage";
			}
			
			arg4
			{
				title = "Crush Mode";
			}
			
		}
		
		197
		{
			title = "Ceiling Crush Start A (silent)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Crush Movement Speed";
			}
			
			arg2
			{
				title = "Raise Movement Speed";
			}
			
			arg3
			{
				title = "Crush Damage";
			}
			
			arg4
			{
				title = "Crush Mode";
			}
			
		}
		
		198
		{
			title = "Ceiling Raise (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		
		199
		{
			title = "Ceiling Lower (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount (8px)";
			}
		}
		
		201
		{
			title = "Ceiling Generic Change";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
			
			arg3
			{
				title = "Target";
				type = 11;
				enum = "generic_ceiling_target";
			}
			
			arg4
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Remove effect";
					2 = "Change texture";
					3 = "Change effect";
					4 = "Numeric model";
					8 = "Raise";
					16 = "Crusher";
				}
			}
		}
		
		205
		{
			title = "Ceiling Generic Crush";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Crush Movement Speed";
			}
			
			arg2
			{
				title = "Raise Movement Amount";
			}
			
			arg3
			{
				title = "Silent";
			}
			
			arg4
			{
				title = "Crush Damage";
			}
		}
		
		169
		{
			title = "Ceiling Generic Crush Hexen Mode";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Crush Movement Speed";
			}
			
			arg2
			{
				title = "Raise Movement Amount";
			}
			
			arg3
			{
				title = "Silent";
			}
			
			arg4
			{
				title = "Crush Damage";
			}
		}
		
		252
		{
			title = "Ceiling Raise to Nearest Ceiling";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		253
		{
			title = "Ceiling Lower to Lowest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		254
		{
			title = "Ceiling Lower to Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		255
		{
			title = "Ceiling Crush Once and Open A (silent)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Crush Movement Speed";
			}
			
			arg2
			{
				title = "Raise Movement Speed";
			}
			
			arg3
			{
				title = "Crush Damage";
			}
		}
	}
	
	
	breakable
	{
		title = "Breakable";
		
		49
		{
			title = "Breakable Glass";
		}
	}
	
	
	transfer
	{
		title = "Transfer";
		
		50
		{
			title = "Transfer Brightness Level";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Options";
				type = 11;
				enum
				{
					0 = "From Control Ceiling Down to Type 0";
					1 = "From Target Ceiling Down to Control Floor";
					2 = "From Control Ceiling Down to Any";
				}
			}
		}
		
		209
		{
			title = "Transfer Heights";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Use fake ceiling/floor";
					2 = "Draw fake floor only";
					4 = "Inside sector only";
					8 = "Swimmable below fake";
					16 = "Do not draw";
					32 = "Keep lighting";
				}
			}
		}
		
		210
		{
			title = "Transfer Floor Brightness";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		211
		{
			title = "Transfer Ceiling Brightness";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}

		16
		{
			title = "Transfer Wall Brightness";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}

			arg1
			{
				title = "Flags";
			}
		}
		
	}
	
	
	platform
	{
		title = "Platform";
		
		60
		{
			title = "Platform Perpetual Move";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Reverse Delay";
			}
		}
		
		61
		{
			title = "Platform Stop";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		62
		{
			title = "Platform Lower Wait Raise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Reverse Delay";
			}
		}
		
		63
		{
			title = "Platform Lower (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Reverse Delay";
			}
			
			arg3
			{
				title = "Movement Amount (8px)";
			}
		}
		
		64
		{
			title = "Platform Raise Wait Lower";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Reverse Delay";
			}
		}
		
		65
		{
			title = "Platform Raise (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Reverse Delay";
			}
			
			arg3
			{
				title = "Movement Amount (8px)";
			}
		}
		
		172
		{
			title = "Platform Raise to Nearest Wait Lower";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Reverse Delay";
			}
		}
		
		203
		{
			title = "Platform Generic Change";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Reverse Delay";
			}
			
			arg3
			{
				title = "Type";
				type = 11;
				enum = "generic_lift_types";
			}
			
			arg4
			{
				title = "Movement Amount";
			}
		}
		
		206
		{
			title = "Platform Lower Wait Raise (lip)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Reverse Delay";
			}
			
			arg3
			{
				title = "Lip Amount";
			}
			
			arg4
			{
				title = "Movement sound type";
			}
		}
		
		207
		{
			title = "Platform Perpetual Move (lip)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Reverse Delay";
			}
			
			arg3
			{
				title = "Lip Amount";
			}
		}
		
		228
		{
			title = "Platform Raise Tx0";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		230
		{
			title = "Platform Raise by Value Tx (8px)";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
			
			arg2
			{
				title = "Movement Amount";
			}
		}
		
		231
		{
			title = "Platform Toggle Ceiling";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
	}
	
	
	teleport
	{
		title = "Teleport";
		
		39
		{
			title = "Teleport to Pain State (silent)";
			
			arg0
			{
				title = "Target MapSpot Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Target Sector Tag";
				type = 13;
			}
		}
		
		70
		{
			title = "Teleport";
			
			arg0
			{
				title = "Target MapSpot Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Target Sector Tag";
				type = 13;
			}
			
			arg2
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
		}
		
		154
		{
			title = "Teleport (No Stop)";
			
			arg0
			{
				title = "Target MapSpot Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Target Sector Tag";
				type = 13;
			}
			
			arg2
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
		}
		
		71
		{
			title = "Teleport (silent)";
			
			arg0
			{
				title = "Target MapSpot Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Keep orientation";
				type = 11;
				enum = "yesno";
			}
			
			arg2
			{
				title = "Target Sector Tag";
				type = 13;
			}
		}
		
		74
		{
			title = "Teleport To Map";
			
			arg0
			{
				title = "Map Number";
			}
			
			arg1
			{
				title = "Position";
			}
			
			arg2
			{
				title = "Keep orientation";
				type = 11;
				enum = "noyes";
			}
		}
		
		76
		{
			title = "Teleport Other";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			
			arg1
			{
				title = "Target Thing ID";
				type = 14;
			}
			
			arg2
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
		}
		
		77
		{
			title = "Teleport Group";
			
			arg0
			{
				title = "Group Thing ID";
				type = 14;
			}
			
			arg1
			{
				title = "Source Thing ID";
				type = 14;
			}
			
			arg2
			{
				title = "Target Thing ID";
				type = 14;
			}
			
			arg3
			{
				title = "Move source";
				type = 11;
				enum = "yesno";
			}
			
			arg4
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
		}
		
		78
		{
			title = "Teleport in sector";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Source Thing ID";
				type = 14;
			}
			
			arg2
			{
				title = "Target Thing ID";
				type = 14;
			}
			
			arg3
			{
				title = "Fog";
				type = 11;
				enum = "noyes";
			}
			
			arg4
			{
				title = "Group Thing ID";
				type = 14;
			}
		}
		
		215
		{
			title = "Teleport To Line";
			
			arg0
			{
				title = "Source Line Tag";
				type = 15;
			}
			
			arg1
			{
				title = "Target Line Tag";
				type = 15;
			}
			
			arg2
			{
				title = "Reverse Angle";
				type = 11;
				enum = "noyes";
			}
		}
	}
	
	
	thing
	{
		title = "Thing";
		
		72
		{
			title = "Thing Thrust";
			
			arg0
			{
				title = "Thrust Angle";
			}
			
			arg1
			{
				title = "Thrust Distance";
			}
		}
		
		73
		{
			title = "Thing Damage";
			
			arg0
			{
				title = "Damage Amount";
			}
		}
		
		119
		{
			title = "Thing Damage";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			
			arg1
			{
				title = "Damage";
			}
			
			arg2
			{
				title = "Death";
				type = 11;
				enum = "death_types";
			}
		}
		
		125
		{
			title = "Thing Move";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			
			arg1
			{
				title = "Target Thing ID";
				type = 14;
			}
		}
		
		127
		{
			title = "Thing Set Special";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			
			arg1
			{
				title = "Special";
				type = 4;
			}
			
			arg2
			{
				title = "Special arg 1";
			}
			
			arg3
			{
				title = "Special arg 2";
			}
			
			arg4
			{
				title = "Special arg 3";
			}
		}
		
		128
		{
			title = "Thing Thrust Z";
			
			arg0
			{
				title = "Thing ID";
				type = 14;
			}
			
			arg1
			{
				title = "Force";
			}
			
			arg2
			{
				title = "Down Up";
				type = 11;
				enum = "updown";
			}
			
			arg3
			{
				title = "Add Set";
				type = 11;
				enum = "addset";
			}
		}
		
		130
		{
			title = "Thing Activate";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		
		131
		{
			title = "Thing Deactivate";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		
		132
		{
			title = "Thing Remove";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		
		133
		{
			title = "Thing Destroy";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		
		134
		{
			title = "Thing Projectile";
			
			arg0
			{
				title = "MapSpot Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			
			arg2
			{
				title = "Movement Angle";
			}
			
			arg3
			{
				title = "Horizontal Speed";
			}
			
			arg4
			{
				title = "Vertical Speed";
			}
		}
		
		135
		{
			title = "Thing Spawn";
			
			arg0
			{
				title = "MapSpot Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			
			arg2
			{
				title = "Thing Angle";
			}
		}
		
		136
		{
			title = "Thing Projectile with Gravity";
			
			arg0
			{
				title = "MapSpot Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			
			arg2
			{
				title = "Movement Angle";
			}
			
			arg3
			{
				title = "Horizontal Speed";
			}
			
			arg4
			{
				title = "Vertical Speed";
			}
		}
		
		137
		{
			title = "Thing Spawn (silent)";
			
			arg0
			{
				title = "MapSpot Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			
			arg2
			{
				title = "Thing Angle";
			}
		}
		
		139
		{
			title = "Thing Spawn Facing";
			
			arg0
			{
				title = "Mapspot ID";
				type = 14;
			}
			
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			
			arg2
			{
				title = "Fog";
				type = 11;
				enum = "yesno";
			}
			
			arg3
			{
				title = "New Thing ID";
			}
		}
		
		175
		{
			title = "Thing Projectile Intercept";
			
			arg0
			{
				title = "Mapspot ID";
				type = 14;
			}
			
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			
			arg2
			{
				title = "Speed";
			}
			
			arg3
			{
				title = "Thing ID target";
				type = 14;
			}
			
			arg4
			{
				title = "New Thing ID";
			}
		}
		
		176
		{
			title = "Thing ID Change";
			
			arg0
			{
				title = "Old Thing ID";
				type = 14;
			}
			
			arg1
			{
				title = "New Thing ID";
			}
		}
		
		177
		{
			title = "Thing Hate";
			
			arg0
			{
				title = "Hater ID";
				type = 14;
			}
			
			arg1
			{
				title = "Hatee ID";
				type = 14;
			}
			
			arg2
			{
				title = "Hate";
				type = 11;
				enum
				{
					0 = "Target only";
					1 = "Target and Player";
					2 = "Forced Target and Player";
					3 = "Hunt Target and Player";
					4 = "Forced Hunt Target and Player";
					5 = "Target, Ignore Player";
					6 = "Forced Target, Ignore Player";
				}
			}
		}
		
		178
		{
			title = "Thing Aimed Projectile";
			
			arg0
			{
				title = "Mapspot ID";
				type = 14;
			}
			
			arg1
			{
				title = "Spawn Thing";
				type = 11;
				enum = "spawnthing";
			}
			
			arg2
			{
				title = "Speed";
			}
			
			arg3
			{
				title = "Target Thing ID";
				type = 14;
			}
			
			arg4
			{
				title = "New Thing ID";
			}
		}
		
		180
		{
			title = "Thing Set Translation";
			
			arg0
			{
				title = "Thing ID";
			}
			
			arg1
			{
				title = "Translation index";
			}
		}
		
		229
		{
			title = "Thing Goal";
			
			arg0
			{
				title = "Monster Thing Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Target Thing Tag";
				type = 14;
			}
			
			arg2
			{
				title = "Delay";
			}
		}
		
		248
		{
			title = "Thing Heal";
			
			arg0
			{
				title = "Health Amount";
			}
		}

		17
		{
			title = "Thing Raise";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		
		19
		{
			title = "Thing Stop";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
		}
		
		18
		{
			title = "Thing Start Converstation";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}

			arg1
			{
				title = "Face talker";
				type = 11;
				enum = "yesno";
			}
		}
		
		
	}
	
	
	end
	{
		title = "End";
		
		75
		{
			title = "End Game";
		}
		
		243
		{
			title = "End Normal";
			
			arg0
			{
				title = "Position";
			}
		}
		
		244
		{
			title = "End Secret";
			
			arg0
			{
				title = "Position";
			}
		}
	}
	
	
	script
	{
		title = "Script";
		
		80
		{
			title = "Script Execute";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Map Number";
			}
			
			arg2
			{
				title = "Script Argument 1";
			}
			
			arg3
			{
				title = "Script Argument 2";
			}
			
			arg4
			{
				title = "Script Argument 3";
			}
		}
		
		81
		{
			title = "Script Suspend";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Map Number";
			}
		}
		
		82
		{
			title = "Script Terminate";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Map Number";
			}
		}
		
		83
		{
			title = "Script Locked Execute";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Map Number";
			}
			
			arg2
			{
				title = "Script Argument 1";
			}
			
			arg3
			{
				title = "Script Argument 2";
			}
			
			arg4
			{
				title = "Key Number";
				type = 11;
				enum = "keys";
			}
		}
		
		85
		{
			title = "Script Locked Execute (Door message)";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Map Number";
			}
			
			arg2
			{
				title = "Script Argument 1";
			}
			
			arg3
			{
				title = "Script Argument 2";
			}
			
			arg4
			{
				title = "Key Number";
				type = 11;
				enum = "keys";
			}
		}
		
		84
		{
			title = "Script Execute with Result";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Script Argument 1";
			}
			
			arg2
			{
				title = "Script Argument 2";
			}
			
			arg3
			{
				title = "Script Argument 3";
			}
		}
		
		226
		{
			title = "Script Execute Always";
			
			arg0
			{
				title = "Script Number";
			}
			
			arg1
			{
				title = "Map Number";
			}
			
			arg2
			{
				title = "Script Argument 1";
			}
			
			arg3
			{
				title = "Script Argument 2";
			}
			
			arg4
			{
				title = "Script Argument 3";
			}
		}
	}
	
	
	scroll
	{
		title = "Scroll";
		
		52
		{
			title = "Scroll Wall";
			
			arg0
			{
				title = "Line ID";
			}
			arg1
			{
				title = "x";
			}
			arg2
			{
				title = "y";
			}
			arg3
			{
				title = "Side";
			}
			arg4
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Scroll upper";
					2 = "Scroll middle";
					4 = "Scroll lower";
				}
			}
		}
		
		100
		{
			title = "Scroll Texture Left";
			
			arg0
			{
				title = "Scroll Speed";
			}
		}
		
		101
		{
			title = "Scroll Texture Right";
			
			arg0
			{
				title = "Scroll Speed";
			}
		}
		
		102
		{
			title = "Scroll Texture Up";
			
			arg0
			{
				title = "Scroll Speed";
			}
		}
		
		103
		{
			title = "Scroll Texture Down";
			
			arg0
			{
				title = "Scroll Speed";
			}
		}
		
		221
		{
			title = "Scroll Texture Both";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			
			arg1
			{
				title = "Left Speed";
			}
			
			arg2
			{
				title = "Right Speed";
			}
			
			arg3
			{
				title = "Down Speed";
			}
			
			arg4
			{
				title = "Up Speed";
			}
		}
		
		222
		{
			title = "Scroll Texture Model";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Displacement";
					2 = "Accelerative";
				}
			}
		}
		
		223
		{
			title = "Scroll Floor";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Displacement";
					2 = "Accelerative";
					4 = "Scroll by linedef dx/dy";
				}
			}
			
			arg2
			{
				title = "Scroll";
				type = 11;
				enum
				{
					1 = "Texture only";
					2 = "Things only";
					4 = "Both";
				}
			}
			
			arg3
			{
				title = "Horizontal Speed";
			}
			
			arg4
			{
				title = "Vertical Speed";
			}
		}
		
		224
		{
			title = "Scroll Ceiling";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			
			arg1
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Displacement";
					2 = "Accelerative";
					4 = "Scroll by linedef dx/dy";
				}
			}
			
			arg2
			{
				title = "Scroll";
				type = 11;
				enum
				{
					1 = "Texture only";
					2 = "Things only";
					4 = "Both";
				}
			}
			
			arg3
			{
				title = "Horizontal Speed";
			}
			
			arg4
			{
				title = "Vertical Speed";
			}
		}
		
		225
		{
			title = "Scroll Texture by Offsets";
		}
	}
	
	
	light
	{
		title = "Light";
		
		110
		{
			title = "Light Raise";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Lighting Amount";
			}
		}
		
		111
		{
			title = "Light Lower";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Lighting Amount";
			}
		}
		
		112
		{
			title = "Light Change";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Brightness Level";
			}
		}
		
		113
		{
			title = "Light Fade";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Brightness Level";
			}
			
			arg2
			{
				title = "Fade Duration";
			}
		}
		
		114
		{
			title = "Light Flow";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Brightest Level";
			}
			
			arg2
			{
				title = "Darkest Level";
			}
			
			arg3
			{
				title = "Fade Duration";
			}
		}
		
		115
		{
			title = "Light Flicker";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Brightest Level";
			}
			
			arg2
			{
				title = "Darkest Level";
			}
		}
		
		116
		{
			title = "Light Strobe";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Brightest Level";
			}
			
			arg2
			{
				title = "Darkest Level";
			}
			
			arg3
			{
				title = "Brightest Duration";
			}
			
			arg4
			{
				title = "Darkest Duration";
			}
		}
		
		117
		{
			title = "Light Stop";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		232
		{
			title = "Light Strobe Doom";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Brightest Duration";
			}
			
			arg2
			{
				title = "Darkest Duration";
			}
		}
		
		233
		{
			title = "Light Change to Darkest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		234
		{
			title = "Light Change to Brightest";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		
		109
		{
			title = "Lightning control";
			
			arg0
			{
				title = "Mode";
			}
		}
		
	}
	
	
	earthquake
	{
		title = "Earthquake";
		
		120
		{
			title = "Earthquake";
			
			arg0
			{
				title = "Intensity";
			}
			
			arg1
			{
				title = "Duration";
			}
			
			arg2
			{
				title = "Damage Radius";
			}
			
			arg3
			{
				title = "Tremor Radius";
			}
			
			arg4
			{
				title = "Thing Tag";
				type = 14;
			}
		}
	}
	
	
	use
	{
		title = "Use";
		
		129
		{
			title = "Use Puzzle Item";
			
			arg0
			{
				title = "Item Number";
			}
			
			arg1
			{
				title = "Script Number";
			}
			
			arg2
			{
				title = "Script Argument 1";
			}
			
			arg3
			{
				title = "Script Argument 2";
			}
			
			arg4
			{
				title = "Script Argument 3";
			}
		}
	}
	
	
	sector
	{
		title = "Sector";

		48
		{
			title = "Sector Attach 3D Midtex";
			
			arg0
			{
				title = "Line ID";
			}
			arg1
			{
				title = "Sector Tag";
			}		
			arg2
			{
				title = "Floor / Ceiling";
				type = 11;
				enum = "floorceiling";
			}
		}
		
		54
		{
			title = "Sector Change Flags";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Set Flags";
				type = 12;
				enum = "sector_flags";
			}

			arg2
			{
				title = "Clear Flags";
				type = 12;
				enum = "sector_flags";
			}
		}
		
		51
		{
			title = "Sector Set Link";
			
			arg0
			{
				title = "Control Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Target Sector Tag";
				type = 13;
			}

			arg2
			{
				title = "Floor / Ceiling";
				type = 11;
				enum = "floorceiling";
			}

			arg3
			{
				title = "Move Type";
				type = 12;
				enum
				{
					1 = "Link Tgt's floor to 'surface'";
					2 = "Link Tgt's ceiling to 'surface'";
					4 = "Floor move at opposite (need bit1)";
					8 = "Ceiling move at opposite (need bit2)";
				}
			}
		}
		
		140
		{
			title = "Sector Change Sound";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Sound Number";
			}
		}

		160
		{
			title = "Sector 3D Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			arg1
			{
				title = "Type";
				type = 11;
				enum
				{
					0 = "Vavoom-Style";
					1 = "Solid";
					2 = "Swimmable";
					3 = "Non-Solid";
					4 = "Render-Inside";
					16 = "Inverted Visibility Rules";
					32 = "Shootability Rules";
				}
			}
			arg2
			{
				title = "Flags";
				type = 12;
				enum
				{
					1 = "Disables light effects";
					2 = "Restricts light Inside";
					4 = "Fog Effect";
					8 = "Ignores bottom height";
					16 = "Uses upper texture";
					32 = "Uses lower texture";
					64 = "Additive transluency";
				}
			}
			arg3
			{
				title = "Alpha";
			}
			arg4
			{
				title = "Hi-Tag";
			}
		}
		
		183
		{
			title = "Sector Floor Alignment to Line";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			
			arg1
			{
				title = "Line Side";
				type = 11;
				enum = "frontback";
			}
		}
		
		184
		{
			title = "Sector Ceiling Alignment to Line";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			
			arg1
			{
				title = "Line Side";
				type = 11;
				enum = "frontback";
			}
		}
		
		185
		{
			title = "Sector Rotate Alignment";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Floor Angle";
			}
			
			arg2
			{
				title = "Ceiling Angle";
			}
		}
		
		186
		{
			title = "Sector Ceiling Panning";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Horizontal Integral";
			}
			
			arg2
			{
				title = "Horizontal Fractional";
			}
			
			arg3
			{
				title = "Vertical Integral";
			}
			
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		
		187
		{
			title = "Sector Floor Panning";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Horizontal Integral";
			}
			
			arg2
			{
				title = "Horizontal Fractional";
			}
			
			arg3
			{
				title = "Vertical Integral";
			}
			
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		
		188
		{
			title = "Sector Ceiling Scale";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Horizontal Integral";
			}
			
			arg2
			{
				title = "Horizontal Fractional";
			}
			
			arg3
			{
				title = "Vertical Integral";
			}
			
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		
		189
		{
			title = "Sector Floor Scale";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Horizontal Integral";
			}
			
			arg2
			{
				title = "Horizontal Fractional";
			}
			
			arg3
			{
				title = "Vertical Integral";
			}
			
			arg4
			{
				title = "Vertical Fractional";
			}
		}
		
		212
		{
			title = "Sector Color";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Red";
			}
			
			arg2
			{
				title = "Green";
			}
			
			arg3
			{
				title = "Blue";
			}
		}
		
		213
		{
			title = "Sector Fade";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Red";
			}
			
			arg2
			{
				title = "Green";
			}
			
			arg3
			{
				title = "Blue";
			}
		}
		
		214
		{
			title = "Sector Damage";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Damage Amount";
			}
			
			arg2
			{
				title = "Death";
				type = 11;
				enum = "death_types";
			}
		}
		
		216
		{
			title = "Sector Gravity";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Gravity Integral";
			}
			
			arg2
			{
				title = "Gravity Fractional";
			}
		}
		
		218
		{
			title = "Sector Wind";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Wind Strength";
			}
			
			arg2
			{
				title = "Wind Angle";
			}
			
			arg3
			{
				title = "Line Vector";
			}
		}
		
		219
		{
			title = "Sector Friction";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Friction Amount";
			}
		}
		
		220
		{
			title = "Sector Current";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Current Strength";
			}
			
			arg2
			{
				title = "Current Angle";
			}
			
			arg3
			{
				title = "Line Vector";
			}
		}
	}
	
	
	alert
	{
		title = "Alert";
		
		173
		{
			title = "Alert monsters";
			
			arg0
			{
				title = "Target ID";
				type = 14;
			}
			
			arg1
			{
				title = "Emitter ID";
				type = 14;
			}
		}
	}
	
	
	communicator
	{
		title = "Communicator";
		
		174
		{
			title = "Communicator message";
			
			arg0
			{
				title = "Message ID";
			}
			
			arg1
			{
				title = "Front side only";
				type = 11;
				enum = "noyes";
			}
			
			arg2
			{
				title = "Message identification";
				type = 11;
				enum = "noyes";
			}
			
			arg3
			{
				title = "Add to Log";
				type = 11;
				enum = "yesno";
			}
		}
	}
	
	
	change
	{
		title = "Change";
		
		179
		{
			title = "Change Skill";
			
			arg0
			{
				title = "New Skill Level";
			}
		}
	}
	
	
	plane
	{
		title = "Plane";
		
		181
		{
			title = "Plane Align (slope)";
			
			arg0
			{
				title = "Align Floor";
				type = 11;
				enum
				{
					0 = "None";
					1 = "Front";
					2 = "Back";
				}
			}
			
			arg1
			{
				title = "Align Ceiling";
				type = 11;
				enum
				{
					0 = "None";
					1 = "Front";
					2 = "Back";
				}
			}
		}
	}
	
	
	static
	{
		title = "Static";
		
		190
		{
			title = "Static Init";
			
			arg0
			{
				title = "Sector Tag";
			}
			
			arg1
			{
				title = "Property";
			}
			
			arg2
			{
				title = "Flip Sky";
			}
		}
	}
	
	
	player
	{
		title = "Player";
		
		191
		{
			title = "Player Property";
			
			arg0
			{
				title = "Everyone";
			}
			
			arg1
			{
				title = "Toggle";
			}
			
			arg2
			{
				title = "Property";
			}
		}
	}
	
	
	translucent
	{
		title = "Translucent";
		
		208
		{
			title = "Translucent Line";
			
			arg0
			{
				title = "Line Tag";
				type = 15;
			}
			
			arg1
			{
				title = "Transparency Amount";
			}
		}
	}
	
	
	point
	{
		title = "Point";
		
		227
		{
			title = "Point Pusher and Puller Force";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Thing Tag";
				type = 14;
			}
			
			arg2
			{
				title = "Strength";
			}
			
			arg3
			{
				title = "Line Vector";
			}
		}
	}
	
	
	camera
	{
		title = "Camera";
		
		237
		{
			title = "Camera Change";
			
			arg0
			{
				title = "Thing Tag";
				type = 14;
			}
			
			arg1
			{
				title = "Everyone";
				type = 11;
				enum = "noyes";
			}
			
			arg2
			{
				title = "Movement Resets";
				type = 11;
				enum = "noyes";
			}
		}
	}
	
	
	elevator
	{
		title = "Elevator";
		
		245
		{
			title = "Elevator Raise to Nearest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		246
		{
			title = "Elevator Raise to Activated Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
		
		247
		{
			title = "Elevator Lower to Nearest Floor";
			
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
			
			arg1
			{
				title = "Movement Speed";
			}
		}
	}
	
}


// THING FLAGS
thingflags
{
	1 = "Easy";
	2 = "Medium";
	4 = "Hard";
	8 = "Deaf";
	16 = "Dormant";
	32 = "Fighter class";
	64 = "Cleric class";
	128 = "Mage class";
	256 = "Singleplayer";
	512 = "Cooperative";
	1024 = "Deathmatch";
	2048 = "Translucent (25%)";
	4096 = "Invisible";
	8192 = "Friendly";
	16384 = "Frozen while inactive";
}

// Thing flags UDMF translation table
// This is needed for copy/paste and prefabs to work properly
// When the UDMF field name is prefixed with ! it is inverted
thingflagstranslation
{
	1 = "skill1";
	2 = "skill2";
	4 = "skill3";
	8 = "ambush";
	16 = "dormant";
	32 = "class1";
	64 = "class2";
	128 = "class3";
	256 = "single";
	512 = "coop";
	1024 = "dm";
	2048 = "translucent";
	4096 = "invisible";
	8192 = "friend";
	16384 = "standing";
}

// THING FLAGS ERROR MASK
// Mask for the thing flags which indicates the options
// that make the same thing appear in the same modes
thingflagsmask1 = 7;	// 1 + 2 + 4
thingflagsmask2 = 1792;	// 256 + 512 + 1024


// THING TYPES
// Color numbers are the basic colors
// Arrow indicates if the things will have an arrow to indicate direction
// Sort: 0 = List as in configuration, 1 = List alphabetically
// Blocking: 0 = No, 1 = Completely, 2 = True-Height
// Error:
// 0 = Dont check for errors
// 1 = Must be inside map (default)
// 2 = Must be inside map and may not collide
thingtypes
{
	editor
	{
		color = 15;	// White
		arrow = 1;
		title = "Editor Things";
		width = 16;
		sort = 1;
		fixedsize = true;
		
		32000 = "Visual Mode camera";
	}
	
	cameras
	{
		color = 7;	// Light Grey
		arrow = 1;
		title = "Cameras and Interpolation";
		width = 16;
		sort = 1;
		height = 0;
		hangs = 0;
		blocking = 0;
		error = 1;
		fixedsize = true;
		
		9025
		{
			title = "Camera";
			arg0
			{
				title = "Pitch";
			}
			arg1
			{
				title = "Pan";
			}
			arg2
			{
				title = "Time";
			}
		}
		9073
		{
			title = "Aiming Camera";
			arg0
			{
				title = "Pitch";
			}
			arg1
			{
				title = "Max Angle";
			}
			arg2
			{
				title = "Max Pitch";
			}
			arg3
			{
				title = "Thing";
				type = 14;
			}
		}
		9080 = "Skybox Viewpoint";
		9081
		{
			title = "Skybox Picker";
			arg0
			{
				title = "Thing";
				type = 14;
			}
		}
		9074
		{
			title = "Actor Mover";
			arg0
			{
				title = "Point";
			}
			arg1
			{
				title = "High Point";
			}
			arg2
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Linear path";
					2 = "Use point angle";
					4 = "Use point pitch";
					8 = "Face movement direction";
					128 = "Nonsolid";
				}
			}
			arg3
			{
				title = "Thing";
				type = 14;
			}
		}
		9070
		{
			title = "Interpolation point";
			arg0
			{
				title = "Pitch";
			}
			arg1
			{
				title = "Travel Time";
			}
			arg2
			{
				title = "Hold Time";
			}
			arg3
			{
				title = "Next";
			}
			arg4
			{
				title = "High Next";
			}
		}
		9075 = "Interpolation Special";
		9072
		{
			title = "Moving Camera";
			arg0
			{
				title = "Point";
			}
			arg1
			{
				title = "High Point";
			}
			arg2
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Linear path";
					2 = "Use point angle";
					4 = "Use point pitch";
					8 = "Face movement direction";
					128 = "Everyone";
				}
			}
			arg3
			{
				title = "Thing";
				type = 14;
			}
		}
		9071
		{
			title = "Path Follower";
			arg0
			{
				title = "Point";
			}
			arg1
			{
				title = "High Point";
			}
			arg2
			{
				title = "Options";
				type = 12;
				enum
				{
					1 = "Linear path";
					2 = "Use point angle";
					4 = "Use point pitch";
					8 = "Face movement direction";
				}
			}
		}
		9047 = "Patrol Special";
	}
	
	bridges
	{
		color = 8;	// Grey
		arrow = 0;
		title = "Bridges";
		width = 16;
		sort = 1;
		height = 1;
		hangs = 0;
		blocking = 0;
		error = 1;
		
		5064  
		{
			title = "Bridge radius 16";
			width = 16;
		}
		5061
		{
			title = "Bridge radius 32";
			width = 32;
		}
		5065
		{
			title = "Bridge radius 8";
			width = 8;
		}
		9990
		{
			title = "Bridge Custom";
			arg0
			{
				title = "Radius";
			}
			arg1
			{
				title = "Thickness";
			}
		}
	}
	
	players
	{
		color = 10;	// Light Green
		arrow = 1;
		title = "Player Starts";
		width = 16;
		sort = 1;
		height = 56;
		hangs = 0;
		blocking = 2;
		error = 2;
		
		1 = "Player 1 start";
		2 = "Player 2 start";
		3 = "Player 3 start";
		4 = "Player 4 start";
		4001 = "Player 5 start";
		4002 = "Player 6 start";
		4003 = "Player 7 start";
		4004 = "Player 8 start";
		11 = "Player Deathmatch start";
	}
	
	teleport
	{
		color = 2;	// Green
		arrow = 1;
		title = "Teleports";
		width = 16;
		sort = 1;
		
		14 = "Teleport Landing";
		9043 = "Teleport with Z Height Gravity";
		9044 = "Teleport with Z Height No Gravity";
		52 = "Teleport Glitter (Exit)";
		74 = "Teleport Glitter";	
	}
	
	sounds
	{
		color = 7;
		arrow = 0;
		title = "Sounds";
		width = 10;
		height = 20;
		sort = 1;
		sprite = "internal:sound";
		
		41 = "Waterfall";
		42 = "Wind";
		1200 = "Scream";
		1201 = "Squish";
		1202 = "Drops";
		1203 = "Slow Footsteps";
		1204 = "Heartbeat";
		1205 = "Bells";
		1206 = "Growl";
		1207 = "Magic";
		1208 = "Laughter";
		1209 = "Fast Footsteps";

		1400 = "Sound Sequence 0";
		1401 = "Sound Sequence 1";
		1402 = "Sound Sequence 2";
		1403 = "Sound Sequence 3";
		1404 = "Sound Sequence 4";
		1405 = "Sound Sequence 5";
		1406 = "Sound Sequence 6";
		1407 = "Sound Sequence 7";
		1408 = "Sound Sequence 8";
		1409 = "Sound Sequence 9";
		1411
		{
			title = "Sound Sequence";
			arg0
			{
				title = "Sound Sequence Number";
			}
		}
		14001 = "Ambient Sound 1";
		14002 = "Ambient Sound 2";
		14003 = "Ambient Sound 3";
		14004 = "Ambient Sound 4";
		14005 = "Ambient Sound 5";
		14006 = "Ambient Sound 6";
		14007 = "Ambient Sound 7";
		14008 = "Ambient Sound 8";
		14009 = "Ambient Sound 9";
		14010 = "Ambient Sound 10";
		14011 = "Ambient Sound 11";
		14012 = "Ambient Sound 12";
		14013 = "Ambient Sound 13";
		14014 = "Ambient Sound 14";
		14015 = "Ambient Sound 15";
		14016 = "Ambient Sound 16";
		14017 = "Ambient Sound 17";
		14018 = "Ambient Sound 18";
		14019 = "Ambient Sound 19";
		14020 = "Ambient Sound 20";
		14021 = "Ambient Sound 21";
		14022 = "Ambient Sound 22";
		14023 = "Ambient Sound 23";
		14024 = "Ambient Sound 24";
		14025 = "Ambient Sound 25";
		14026 = "Ambient Sound 26";
		14027 = "Ambient Sound 27";
		14028 = "Ambient Sound 28";
		14029 = "Ambient Sound 29";
		14030 = "Ambient Sound 30";
		14031 = "Ambient Sound 31";
		14032 = "Ambient Sound 32";
		14033 = "Ambient Sound 33";
		14034 = "Ambient Sound 34";
		14035 = "Ambient Sound 35";
		14036 = "Ambient Sound 36";
		14037 = "Ambient Sound 37";
		14038 = "Ambient Sound 38";
		14039 = "Ambient Sound 39";
		14040 = "Ambient Sound 40";
		14041 = "Ambient Sound 41";
		14042 = "Ambient Sound 42";
		14043 = "Ambient Sound 43";
		14044 = "Ambient Sound 44";
		14045 = "Ambient Sound 45";
		14046 = "Ambient Sound 46";
		14047 = "Ambient Sound 47";
		14048 = "Ambient Sound 48";
		14049 = "Ambient Sound 49";
		14050 = "Ambient Sound 50";
		14051 = "Ambient Sound 51";
		14052 = "Ambient Sound 52";
		14053 = "Ambient Sound 53";
		14054 = "Ambient Sound 54";
		14055 = "Ambient Sound 55";
		14056 = "Ambient Sound 56";
		14057 = "Ambient Sound 57";
		14058 = "Ambient Sound 58";
		14059 = "Ambient Sound 59";
		14060 = "Ambient Sound 60";
		14061 = "Ambient Sound 61";
		14062 = "Ambient Sound 62";
		14063 = "Ambient Sound 63";
		14064 = "Ambient Sound 64";
		14065
		{
			title = "Ambient Sound";
			arg0
			{
				title = "Ambient Sound Number";
			}
		}
	}
	
	
	monsters
	{
		color = 12;	// Light Red
		arrow = 1;
		title = "Monsters";
		width = 16;
		sort = 1;
		
		66 = "Gargoyle";
		5 = "Fire Gargoyle";
		68
		{
			title = "Golem";
			width = 22;
		}
		69
		{
			title = "Golem Ghost";
			width = 22;
		}
		45 
		{
			title = "Nitrogolem";
			width = 22;
		}
		46
		{
			title = "Nitrogolem Ghost";
			width = 22;
		}
		15 = "Disciple Of D'Sparil";
		6
		{
			title = "Iron Lich";
			width = 40;
		}
		7
		{
			title = "D'Sparil";
			width = 28;
		}
		56 = "D'Sparil Teleport Location";
		9 
		{
			title = "Maulotaur";
			width = 28;
		}
		64 
		{
			title = "Undead Warrior";
			width = 24;
		}
		65 
		{
			title = "Undead Warrior Ghost";
			width = 24;
		}
		70 
		{
			title = "Weredragon";
			width = 32;
		}
		90 
		{
			title = "Sabreclaw";
			width = 20;
		}                
		92
		{
			title = "Ophidian";
			width = 22;
		}
	}
	
	weapons
	{
		color = 14;	// Yellow
		arrow = 0;
		title = "Weapons";
		width = 20;
		sort = 1;
		
		53 = "Dragon Claw";
		2001 = "Ethereal Crossbow";
		2002 = "Firemace";
		2003 = "Phoenix Rod";
		2004 = "Hellstaff";
		2005 = "Gauntlets Of The Necromancer";
	}
	
	ammunition
	{
		color = 6;	// Brown
		arrow = 0;
		title = "Ammunition";
		width = 20;
		sort = 1;
		
		10 = "Wand Crystal";
		12 = "Crystal Geode";
		13 = "Mace Spheres";
		16 = "Pile Of Mace Spheres";
		18 = "Ethereal Arrows";
		19 = "Quiver Of Ethereal Arrows";
		20 = "Lesser Runes";
		21 = "Greater Runes";
		22 = "Flame Orb";
		23 = "Inferno Orb";
		54 = "Claw Orb";
		55 = "Energy Orb";
		8 = "Bag Of Holding";
	}
	
	health
	{
		color = 1;	// Blue
		arrow = 0;
		title = "Health and Armor";
		width = 20;
		sort = 1;
		
		81 = "Crystal Vial";
		85 = "Silver Shield";
		31 = "Enchanted Shield";
	}
	
	powerups
	{
		color = 9;	// Light Blue
		arrow = 0;
		height = 20;
		title = "Artifacts";
		width = 20;
		sort = 1;
		
		30 = "Morph Ovum";
		32 = "Mystic Urn";
		33 = "Torch";
		34 = "Time Bomb Of The Ancients";
		35 = "Map Scroll";
		36 = "Chaos Device";
		75 = "Shadowsphere";
		82 = "Quartz Flask";
		83 = "Wings Of Wrath";
		84 = "Ring of Invulnerability";
		86 = "Tome of Power";
	}
	
	keys
	{
		color = 13;	// Light Magenta
		arrow = 0;
		title = "Keys";
		width = 20;
		sort = 1;
		
		73 = "Green Key";
		79 = "Blue Key";
		80 = "Yellow Key";
	}
	
	obstacles
	{
		color = 3;	// Cyan
		arrow = 0;
		title = "Obstacles";
		width = 20;
		sort = 1;
		
		29 = "Small Pillar";
		37 = "Stalagmite (Small)";
		38 = "Stalagmite (Large)";
		39 = "Stalactite (Small)";
		40 = "Stalactite (Large)";
		44 = "Barrel";
		47 = "Brown Pillar";
		87 = "Volcano";
		2035 = "Gasbag";
		43 = "Gasbag Generator";
	}
	
	lights
	{
		color = 11;	// Light Cyan
		arrow = 0;
		title = "Light sources";
		width = 16;
		sort = 1;
		
		27 = "Serpent Torch";
		28 = "Chandelier";
		50 = "Wall Torch";
		76 = "Fire Brazier";
	}
	
	decoration
	{
		color = 4;	// Red
		arrow = 0;
		title = "Decoration";
		width = 16;
		sort = 1;
		
		94 = "Blue Key Marker";
		95 = "Green Key Marker";
		96 = "Yellow Key Marker";
		51 = "Hanging Corpse";
		17 = "Hanging Skull";
		24 = "Hanging Skull 2";
		25 = "Hanging Skull 3";
		26 = "Hanging Skull 4";
		48 = "Moss";
		49 = "Moss 2";
	}
	
	sectors
	{
		color = 7;
		arrow = 0;
		title = "Sector Actions";
		width = 10;
		height = 20;
		sort = 1;
		fixedsize = true;
		sprite = "internal:action";
		
		9082 = "Silent Sector";
		9998 = "Actor enters sector";
		9989 = "Actor hits fake floor";
		9996 = "Actor hits ceiling";
		9999 = "Actor hits floor";
		9997 = "Actor leaves sector";
		9982 = "Eyes above fake ceiling";
		9992 = "Eyes above fake floor";
		9983 = "Eyes below fake ceiling";
		9993 = "Eyes below fake floor";
		9995 = "Player uses sector";
		9994 = "Player uses wall";
		9038
		{
			title = "ColorSetter";
			arg0
			{
				title = "Red";
			}
			arg1
			{
				title = "Green";
			}
			arg2
			{
				title = "Blue";
			}
			arg3
			{
				title = "Desaturation";
			}
		}
		9039
		{
			title = "FadeSetter";
			arg0
			{
				title = "Red";
			}
			arg1
			{
				title = "Green";
			}
			arg2
			{
				title = "Blue";
			}
		}
	}
	
	slopes
	{
		color = 8;	// Grey
		arrow = 0;
		title = "Slopes";
		width = 8;
		sort = 1;
		height = 0;
		hangs = 0;
		blocking = 0;
		fixedsize = true;
		
		9511
		{
			title = "Copy ceiling plane";
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		9510
		{
			title = "Copy floor plane";
			arg0
			{
				title = "Sector Tag";
				type = 13;
			}
		}
		9503
		{
			title = "Set ceiling slope";
			arrow = 1;
			arg0
			{
				title = "Z-Angle";
			}
		}
		9502
		{
			title = "Set floor slope";
			arrow = 1;
			arg0
			{
				title = "Z-Angle";
			}
		}
		9501
		{
			title = "Slope ceiling to here";
			height = 8;
			arg0
			{
				title = "Line";
				type = 15;
			}
		}
		9500
		{
			title = "Slope floor to here";
			height = 4;
			arg0
			{
				title = "Line";
				type = 15;
			}
		}
		
		1500
		{
			title = "Line slope floor";
			height = 8;
		}
		
		1501
		{
			title = "Line slope ceiling";
			height = 8;
		}
		
		1504
		{
			title = "Vertex slope floor";
			height = 8;
		}
		
		1505
		{
			title = "Vertex slope ceiling";
			height = 8;
		}
	}
	
	zdoom
	{
		color = 7;	// Light Grey
		arrow = 1;
		title = "ZDoom";
		sort = 1;
		width = 10;
		height = 20;
		hangs = 0;
		blocking = 0;
		fixedsize = true;
		sprite = "internal:arrow";
		
		9200
		{
			title = "Decal";
			arg0
			{
				title = "Decal ID";
			}
		}
		5001 = "Pusher";
		5002 = "Puller";
		9024
		{
			title = "Path Node";
			arg0
			{
				title = "Next Node";
				type = 14;
			}
			arg1
			{
				title = "Delay";
			}
		}
		9026
		{
			title = "Spark";
			arg0
			{
				title = "Particles Amount";
			}
		}
		9040 = "Map Marker";
		9045 = "Deep Water";
		9046 = "Secret";
		9300 = "Polyobject Anchor";
		9301 = "Polyobject Start Spot";
		9302 = "Polyobject Start Spot (crush)";
		9303 = "Polyobject Spawn(Hurts to touch)";
		9001 = "Map Spot";
		9013 = "Map Spot (gravity)";
		9076 = "Hate target";
		9988
		{
			title = "Custom Sprite";
			arg0
			{
				title = "BTILxxxx";
			}
			arg1
			{
				title = "X Scale (64=100%)";
			}
			arg2
			{
				title = "Y Scale (64=100%) ";
			}
			arg3
			{
				title = "Flags";
				type = 11;
				enum
				{
					0 = "Opaque";
					2 = "Alpha 33%";
					3 = "Alpha 66%";
					4 = "Flip horizontally";
					5 = "Flip vertically";
				}
			}
		}
	}
	
	portals
	{
		color = 7;
		arrow = 0;
		title = "Portals";
		width = 0;
		sort = 1;
		height = 0;
		hangs = 0;
		blocking = 0;
		fixedsize = true;
		
		9077
		{
			title = "Upper Sector";
			arg0
			{
				title = "Flat Transparency";
			}
		}
		
		9078
		{
			title = "Lower Sector";
			arg0
			{
				title = "Flat Transparency";
			}
		}
	}
	
}


// ENUMERATIONS
// These are enumerated lists for linedef types and UDMF fields.
enums
{
	yesno
	{
		1 = "Yes";
		0 = "No";
	}
	
	noyes
	{
		0 = "Yes";
		1 = "No";
	}
	
	onoff
	{
		0 = "On";
		1 = "Off";
	}
	
	offon
	{
		1 = "On";
		0 = "Off";
	}
	
	updown
	{
		0 = "Up";
		1 = "Down";
	}
	
	addset
	{
		0 = "Add";
		1 = "Set";
	}
	
	frontback
	{
		0 = "Front";
		1 = "Back";
	}
	
	backfront
	{
		1 = "Front";
		0 = "Back";
	}
	
	floorceiling
	{
		0 = "Floor";
		1 = "Ceiling";
	}
	
	ceilingfloor
	{
		0 = "Ceiling";
		1 = "Floor";
	}
	
	sector_flags
	{
		1 = "Silent";
		2 = "No Falling Damage";
		4 = "Drop with floor";
		8 = "No Respawn";
	}
	
	keys
	{
		0 = "None";
		1 = "Green key";
		2 = "Blue key";
		3 = "Yellow key";
		100 = "Any key";
		101 = "All keys";
		102 = "Impossible";
	}
	
	spawnthing
	{
		0 = "None";
		
		/*
		T_CLINK                 1
		T_MUMMYLEADER           2
		T_BEAST                 3
		T_MUMMY                 4
		T_IMP                   5
		T_KNIGHT                6
		T_IMPLEADER             7
		T_MUMMYGHOST            8
		T_MUMMYLEADERGHOST      9
		T_IMPFIREBALL           10
		T_WIMPYWANDAMMO         11
		T_HEFTYWANDAMMO         12
		T_ITEMEGG               14
		T_ITEMFLIGHT            15
		T_ITEMTELEPORT          18
		T_WIZARD                19
		T_IRONLICH              20
		T_ITEMHEALTHPOTION      23
		T_ITEMHEALTHFLASH       24
		T_ITEMHEALTHFULL        25
		T_CROSSBOW              27
		T_BLASTER               28
		T_PHOENIXROD            29
		T_SKULLROD              30
		T_MACE                  31
		T_GAUNTLETS             32
		T_WIMPYCROSSBOWAMMO     33
		T_HEFTYCROSSBOWAMMO     34
		T_WIMPYMACEAMMO         35
		T_HEFTYMACEAMMO         36
		T_WIMPYBLASTERAMMO      37
		T_HEFTYBLASTERAMMO      38
		T_MORPHBLAST            40
		T_SHIELD1               68
		T_SHIELD2               69
		T_ITEMTIMEBOMB          72
		T_ITEMTORCH             73
		T_BLUEKEY               85
		T_GREENKEY              86
		T_YELLOWKEY             87
		T_SOUND_WIND            110
		T_SOUND_WATERFALL       111
		T_BEASTBALL             120
		T_FEATHER               121
		T_CHICKEN               122
		T_VOLCANOBALL           123
		T_TINYVOLCANOBALL       124
		T_POD                   125
		T_PODGENERATOR          126
		T_KNIGHTAXE             127
		T_KNIGHTBLOODAXE        128
		T_KNIGHTGHOST           129
		T_MUMMYHEAD             131
		T_SNAKE                 132
		T_ITEMINVULNERABILITY   133
		T_ITEMTOME              134
		T_ITEMINVISIBILITY      135
		T_ITEMBAGOFHOLDING      136
		T_ITEMALLMAP            137
		T_SNAKEPROJECTILE       138
		T_SNAKEPROJECTILEBIG    139
		T_WIZARDSHOT            140
		T_DSPARILTELEPORTDEST   141
		T_DSPARILONSERPENT      142
		T_DSPARILALONE          143
		T_SERPENTFIREBALL       144
		T_DSPARILBLUESHOT       145
		T_DSPARILWIZARDSPAWNER  146
		T_CROSSBOWMAINBLAST     147
		T_CROSSBOWMINIBLAST     148
		T_CROSSBOWPOWERBLAST    149
		T_VOLCANO               150
		T_POWERWANDMINIBLAST    151
		T_POWERWANDBIGGERBLAST  152
		T_DEATHBALL             153
		T_NOGRAVITYMACEBALL     154
		T_BOUNCYMACEBALL        155
		T_HEAVYMACEBALL         156
		T_RIPPER                157
		T_WIMPYSKULLRODAMMO     158
		T_HEFTYSKULLRODAMMO     159
		T_SKULLRODBLAST         160
		T_WIMPYPHOENIXRODAMMO   161
		T_HEFTYPHOENIXRODAMMO   162
		T_PHOENIXSHOT           163
		T_IRONLICHBLUESHOT      164
		T_WHIRLWIND             165
		T_REDTELEGLITTER        166
		T_BLUETELEGLITTER       167
		*/
	}
	
	generic_floor_target
	{
		0 = "Relative offset";
		1 = "Highest neighbor";
		2 = "Lowest neighbor";
		3 = "Nearest neighbor";
		4 = "Lowest neighbor";
		5 = "Ceiling";
		6 = "Shortest lower texture";
	}
	
	generic_ceiling_target
	{
		0 = "Relative offset";
		1 = "Highest neighbor";
		2 = "Lowest neighbor";
		3 = "Nearest neighbor";
		4 = "Highest neighbor";
		5 = "Floor";
		6 = "Shortest lower texture";
	}
	
	generic_door_types
	{
		0 = "Open Close";
		1 = "Open Stay";
		2 = "Close Open";
		3 = "Close Stay";
	}
	
	generic_lift_types
	{
		0 = "Up Stay";
		1 = "Down Up";
		2 = "Down to nearest";
		3 = "Down to lowest";
		4 = "Perpetual raise";
	}

	death_types
	{
		0  = "Unknown";
		12 = "Water";
		13 = "Slime";
		14 = "Lava";
		15 = "Crush";
		16 = "Telefrag";
		17 = "Falling";
		18 = "Suicide";
		19 = "Barrel";
		20 = "Exit";
		21 = "Splash";
		22 = "Hit";
	}
}

// Default thing filters
// (these are not required, just usefull for new users)
thingsfilters
{
	
	filter0
	{
		name = "Easy skill";
		category = "";
		type = -1;
		
		fields
		{
			1 = true;
		}
		
	}
	
	
	filter1
	{
		name = "Hard skill";
		category = "";
		type = -1;
		
		fields
		{
			4 = true;
		}
		
	}
	
	
	filter2
	{
		name = "Keys only";
		category = "keys";
		type = -1;
	}
	
	
	filter3
	{
		name = "Medium skill";
		category = "";
		type = -1;
		
		fields
		{
			2 = true;
		}
		
	}
	
	
	filter4
	{
		name = "Multiplayer";
		category = "";
		type = -1;
		
		fields
		{
			512 = true;
			1024 = true;
		}
		
	}
	
}


// Default texture sets
// (these are not required, but usefull for new users)
texturesets
{
	
	set0
	{
		name = "Liquids";
		filter0 = "FLATHUH*";
		filter1 = "FLTFLWW*";
		filter2 = "FLTLAVA*";
		filter3 = "FLTSLUD*";
		filter4 = "FLTWAWA*";
		filter5 = "LAVAFL*";
		filter6 = "WATRWAL*";
	}
	
	
	set1
	{
		name = "Stone";
		filter0 = "BRWNRCKS";
		filter1 = "BANNER1";
		filter2 = "BANNER2";
		filter3 = "BANNER3";
		filter4 = "BANNER4";
		filter5 = "BANNER7";
		filter6 = "BANNER8";
		filter7 = "CSTLMOSS";
		filter8 = "CSTLRCK";
		filter9 = "FLAT520";
		filter10 = "FLAT521";
		filter11 = "FLAT522";
		filter12 = "FLAT523";
		filter13 = "FLOOR00";
		filter14 = "FLOOR01";
		filter15 = "FLOOR03";
		filter16 = "FLOOR18";
		filter17 = "GRSTNPB";
		filter18 = "GRSTNPBV";
		filter19 = "GRSTNPBW";
		filter20 = "LOOSERCK";
		filter21 = "RCKSNMUD";
		filter22 = "ROOTWALL";
		filter23 = "SQPEB1";
		filter24 = "SQPEB2";
		filter25 = "TRISTON1";
		filter26 = "TRISTON2";
		filter27 = "BLUEFRAG";
		filter28 = "FLOOR04";
		filter29 = "FLOOR05";
		filter30 = "FLOOR06";
		filter31 = "FLOOR07";
		filter32 = "FLOOR16";
		filter33 = "FLOOR19";
		filter34 = "FLOOR20";
		filter35 = "GRNBLOK*";
		filter36 = "LAVA1";
		filter37 = "SNDBLCKS";
	}
	
	
	set2
	{
		name = "Metal";
		filter0 = "CHAINSD";
		filter1 = "DMNMSK";
		filter2 = "DOOREXIT";
		filter3 = "DOORSTON";
		filter4 = "FLAT500";
		filter5 = "FLOOR08";
		filter6 = "FLOOR21";
		filter7 = "FLOOR22";
		filter8 = "FLOOR23";
		filter9 = "FLOOR24";
		filter10 = "FLOOR26";
		filter11 = "FLOOR28";
		filter12 = "FLOOR29";
		filter13 = "FLOOR30";
		filter14 = "METL1";
		filter15 = "METL2";
		filter16 = "SAINT1";
		filter17 = "SKULLSB1";
		filter18 = "SKULLSB2";
		filter19 = "SW1OFF";
		filter20 = "SW1ON";
		filter21 = "SW2OFF";
		filter22 = "SW2ON";
		filter23 = "GATMETL*";
		filter24 = "GATMETL";
		filter25 = "GRSKULL*";
	}
	
	
	set3
	{
		name = "Town";
		filter0 = "CTYSTCI*";
		filter1 = "CTYSTUC*";
		filter2 = "FLOOR11";
		filter3 = "FLOOR12";
		filter4 = "WOODWL";
		filter5 = "WDGAT64";
	}
	
}
