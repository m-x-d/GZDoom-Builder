
===========================================================================================
CORE DOOM BUILDER IDEAS
===========================================================================================

[15:49] <SoM> if you split a linedef with a vertex, there should be an option that will align the second half of the split 
[15:49] <SoM> so like, if I have a line that is 128 units long
[15:49] <SoM> and I split them in half
[15:50] <SoM> the second linedef of the split would have the offset of the first + 64
[15:50] <SoM> I don't think it would take much effort
[15:50] <SoM> and it could easily be optional
[15:51] <SoM> I've been doing a lot of detailing that would be made a lot easier with a feature like this
[15:52] <CodeImp> i dont even think that should be an option, but normal behaviour

===========================================================================================

Draw association on top of highlight so that a highligted sector referring to it's own
lines still show the line association. But for a line referring to the sector the association
should be drawn underneath the highlight or the highlight would be invisible.

===========================================================================================

Option to only remove upper/lower textures when neither side of the line has a tag when drawing/merging.
Option to never remove any upper/lower textures when drawing/merging.

===========================================================================================

A feature that might be definitely of use in 3D Mode: "Drag Texture Offset", means simply by holding space and moving the mouse you can drag/move a texture on it's wall.

===========================================================================================

So in a Hexen-format map, the default activation for a linedef special is "player walks over". Could DB2 be made smart enough to instead use "player presses use" for default activation method when the line is impassible?




===========================================================================================
DOOM BUILDER PLUGIN IDEAS
===========================================================================================

Plugin that adds a key to toggle between 3D mode and the previous mode. Some people may want that behaviour back. When in 3D mode, the plugin should cancel any mode switches (but preferrably any action) that uses the WASD keys and give a seperate key (preferrably the same as 3D mode) to return to the previous mode.

===========================================================================================

Map statistics plugin
- Button on toolbar for stats window (stats also shown in text format for copy/paste)
- Command-line processing that saves text stats to file

===========================================================================================

Plugin to make a quick sector draw (square/circle) by drawing a single line

===========================================================================================

Plugin to rotating Things by clicking on the editor. For example, you select your Things, then you simply click in the direction you want them to be faced, and they will turn. Also add an option to have them either turn all in the same direction, or all point toward the mouse cursor. (For example, if I put enemies in a circle formation and I want them to all point toward the center of the circle.)

===========================================================================================

Sound Tracer Plugin. A plugin that simulates a noise in a sector, and the editor shows to which sectors the sound goes and highlight all the things that would hear the noise (especially non-deaf monsters).

===========================================================================================

The idea is actual extremely simple; having a tool to freely select things, verticies, lines, sectors, etc in a fashion other than being limited by an expanding rectangle select shape or by selecting one by one would be very nice indeed.

Actually I got the idea from GIMP (though just about all basic image editors have something similar). I think something like this could really speed up the selecting process, especially when your working with lots of things or verticies, etc. Being limited to just a square selecting box in some situations can be annoying.

Stemming from the same concept is FreeDraw, which I think is also a pretty simple idea as well (though I don't know if it would be harder to implement or not). Again, the idea came through me by a combination of image editing and doing lots and lots of tedious rock-type structures in maps. In particular, I was working on a very large cave-type map which required lots and lots of jutting and curvy wall structures. Of course this requires lots of repetitive line drawing; before you know it you've spent two hours on what is basically just a bunch of squiggly lines and curves. The idea with FreeDraw is to help cut down the time that's needed on doing structures likes this by merely drawing out a path for Doom Builder 2 to follow and draw the lines by. Think of MSPaint's pencil tool integrated into Doom Builder in a sense; you would select FreeDraw and then draw a square shape with it. Afterward you hit enter (or something similar to this to let DB2 know that your done drawing in FreeDraw mode) and it will create the linedefs. Of course the concept as it was described above could be a little problematic since tight curves and such might end up drawing waaay more lines than you really want in the end. So to add to that, I think a custom parameter box (much like what is used when you curve a linedef) would be in order to set some boundaries on how DB2 interprets and then draws the linedefs. Something along the lines of how strictly you want it to interpret the FreeDrawn line, much like how many verticies are used when curving a linedef. Of course I think something like FreeDraw would be very useful for even normal sector drawing, especially if the parameters by which DB2 reads the lines are fairly specific. It could greatly increase the speed at which structures are drawn, espeically large and complex ones.
